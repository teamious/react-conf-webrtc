{"version":3,"sources":["webpack:///./src/components/App.tsx","webpack:///./src/config/config.ts","webpack:///../src/index.ts","webpack:///../src/components/index.ts","webpack:///../src/components/Conference.tsx","webpack:///../src/data/Const.ts","webpack:///../src/data/Error.ts","webpack:///../src/services/index.ts","webpack:///../src/services/ConferenceService.ts","webpack:///../src/services/DataChannelService.ts","webpack:///../src/services/ErrorService.ts","webpack:///../src/utils/StreamRecorder.ts","webpack:///vertx (ignored)","webpack:///../screen-capture-chrome-extension/src/message.ts","webpack:///../src/components/controls/index.ts","webpack:///../src/Spreed/index.ts","webpack:///../src/Spreed/Connect.ts","webpack:///../src/utils/index.ts","webpack:///./src/components/MediaStreamControl.tsx","webpack:///../index.ts","webpack:///../src/data/index.ts","webpack:///../src/utils/createAudioMonitor.ts","webpack:///../src/utils/MediaStreamUtil.ts","webpack:///../src/utils/DownloadUtil.ts","webpack:///../src/utils/ChromeExtensionUtil.ts","webpack:///../src/components/controls/AudioMeter.tsx","webpack:///../src/components/controls/Stream.tsx","webpack:///../src/Spreed/SpreedConnection.ts","webpack:///../src/Spreed/SpreedAdapter.ts","webpack:///../src/Spreed/TranslateSpreedMessage.ts","webpack:///../src/Spreed/TranslateConferenceMessage.ts","webpack:///../src/Spreed/SpreedAPI.ts","webpack:///./src/index.tsx","webpack:///./src/index.scss"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,yBAAwB;AACxB,oCAA+B;AAC/B,0CAAyC;AACzC,wCAAuC;AAEvC,kDAW2B;AAC3B,oDAA0D;AAE1D,IAAM,MAAM,GAAqB;IAC7B,YAAY,EAAE;QACV,EAAE,MAAM,EAAE,gCAAgC,EAAE;QAC5C,EAAE,MAAM,EAAE,8BAA8B,EAAE;KAC7C;CACJ,CAAC;AAEF;IAAyB,uBAAuB;IAC5C;QAAA,YACI,iBAAO,SAGV;QAFG,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACzD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC3C,CAAC;IAED,oBAAM,GAAN;QACI,MAAM,CAAC,CACH,oBAAC,8BAAU,IACP,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAC7B,OAAO,EAAE,OAAO,EAChB,IAAI,EAAC,iBAAiB,EACtB,oBAAoB,EAAE,MAAM,EAC5B,OAAO,EAAE,IAAI,CAAC,OAAO,GACvB,CACL,CAAC;IACN,CAAC;IAEO,0BAAY,GAApB,UAAqB,MAAwB,EAAE,WAAsC;QACjF,WAAW,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;IAEO,6BAAe,GAAvB,UAAwB,MAAwB,EAAE,WAAsC;QACpF,WAAW,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;IAEO,gCAAkB,GAA1B,UAA2B,kBAA6C,EAAE,kBAA6C,EAAE,MAAwB;QAC7I,8DAA8D;QAC9D,uDAAuD;QACvD,IAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAExC,MAAM,CAAC,CACH,6BAAK,SAAS,EAAC,yBAAyB,EAAC,GAAG,EAAE,MAAM,CAAC,EAAE;YACnD,gCAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,kBAAkB,CAAC,WAE9E;YACT,gCAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,kBAAkB,CAAC,YAEjF;YACT,oBAAC,0BAAM,IAAC,SAAS,EAAC,iCAAiC,EAAC,MAAM,EAAE,MAAM,CAAC,MAAM,GAAI;YAC7E,6BAAK,SAAS,EAAE,UAAU,CAAC,+BAA+B,EAAE,EAAE,4CAA4C,EAAE,MAAM,CAAC,UAAU,EAAE,CAAC,IAC3H,IAAI,CACH,CACJ,CACT;IACL,CAAC;IAEO,8BAAgB,GAAxB,UAAyB,WAAkC,EAAE,YAA8C;QAC/F,yCAAW,EAAE,yCAAa,EAAE,uCAAY,CAAiB;QACzD,wDAAkB,EAAE,oDAAkB,EAAE,4DAAsB,EAAE,8CAAe,CAAkB;QAEzG,MAAM,CAAC,CACH,6BAAK,SAAS,EAAC,WAAW;YACrB,WAAW,GAAG,CACX,6BAAK,SAAS,EAAC,wBAAwB;gBACnC,oBAAC,0BAAM,IAAC,MAAM,EAAE,CAAC,WAAW,CAAC,eAAe,EAAE,MAAM,EAAE,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,GAAI,CACvF,CACT,GAAG,IAAI;YAER,6BAAK,SAAS,EAAC,0BAA0B,IACpC,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CACxG;YAEL,WAAW,GAAG,CACX,6BAAK,SAAS,EAAC,2BAA2B;gBACtC,oBAAC,8BAAU,IAAC,YAAY,EAAE,WAAW,CAAC,YAAY,GAAI;gBACtD,oBAAC,uCAAkB,IACf,YAAY,EAAE,WAAW,CAAC,YAAY,EACtC,YAAY,EAAE,WAAW,CAAC,YAAY,EACtC,kBAAkB,EAAE,kBAAkB,EACtC,kBAAkB,EAAE,kBAAkB,EACtC,iBAAiB,EAAE,sBAAsB,EACzC,eAAe,EAAE,eAAe,GAClC,CACA,CACT,GAAG,IAAI,CACN,CACT;IACL,CAAC;IAEO,qBAAO,GAAf,UAAgB,KAAU;QACtB,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACZ,KAAK,SAAS;gBACV,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC;YACzE,KAAK,oBAAoB;gBACrB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC;YAC/C,KAAK,iBAAiB;gBAClB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC;YAC5C;gBACI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;QACnC,CAAC;IACL,CAAC;IACL,UAAC;AAAD,CAAC,CA7FwB,KAAK,CAAC,SAAS,GA6FvC;AA7FY,kBAAG;AA+FhB,0DAA0D;AAC1D;IACI,IAAM,SAAS,GAAG,YAAG,CAAC,UAAU,GAAG,YAAG,CAAC,UAAU,GAAG,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC;IAChF,IAAM,IAAI,GAAG,2BAAO,CAAC,QAAQ,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC;IACnD,IAAI,CAAC,aAAa,GAAG,UAAC,GAAG,EAAE,IAAI;QAC3B,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/E,IAAI,EAAE;IACV,CAAC;IACD,MAAM,CAAC,IAAI,CAAC;AAChB,CAAC;;;;;;;;;;;AC3HY,WAAG,GAAS,8FAAW,CAAC;;;;;;;;;;;;;;ACPrC,mCAA6B;AAC7B,kCAAuB;AACvB,mCAAyB;AACzB,mCAAwB;;;;;;;;;;;;;;ACHxB,mCAA6B;AAC7B,mCAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD3B,oCAA+B;AAC/B,yCAAuC;AACvC,yBAAwB;AAExB,qCAiBiB;AACjB,0CAkBqB;AACrB,mDAA+E;AAC/E,8CAA4D;AAC5D,gDAAyD;AACzD,oDAA+D;AAC/D,2CAAmD;AACnD,uCAA2C;AA6C3C,IAAM,uBAAuB,GAAG;IAC5B,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,IAAI;CACd;AAWD;IAAgC,8BAAmD;IAU/E,oBAAY,KAAuB;QAAnC,YACI,kBAAM,KAAK,CAAC,SA6Bf;QArCO,qBAAe,GAAwC,EAAE,CAAC;QAC1D,gBAAU,GAA4C,EAAE,CAAC;QACzD,kBAAY,GAAqC,EAAE,CAAC;QAEpD,mBAAa,GAA8B,EAAE,CAAC;QAKlD,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACnE,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjE,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjD,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjE,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjE,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC7D,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC7D,KAAI,CAAC,+BAA+B,GAAG,KAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACvF,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjE,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACnD,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACnD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACzD,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACvD,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAE7D,KAAI,CAAC,KAAK,GAAG;YACT,WAAW,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAsB;YAC3E,aAAa,EAAE,EAAE;YACjB,YAAY,EAAE,EAAkB;SACnC;QAED,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;;QAElC,CAAC;QAAA,CAAC;QAEF,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QACvC,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/B,KAAI,CAAC,YAAY,EAAE,CAAC;;IACxB,CAAC;IAEM,2BAAM,GAAb;QACI,IAAM,aAAa,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;QACxD,IAAM,WAAW,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAC5C,8BAAM,CAAgB;QACtB,0CAAY,CAAgB;QAEpC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YACvD,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC3D,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,MAAM,CAAC;gBACV,WAAW;gBACX,aAAa;gBACb,YAAY;aACf,EAAE;gBACK,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;gBAC3C,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;gBAC3C,sBAAsB,EAAE,IAAI,CAAC,eAAe;gBAC5C,eAAe,EAAE,IAAI,CAAC,gBAAgB;aACzC,CAAC,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,CACH,6BAAK,SAAS,EAAC,gBAAgB;YAC1B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAC9B,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACpC,IAAI,CAAC,+BAA+B,EAAE;YACvC,oBAAC,uBAAU,IAAC,YAAY,EAAE,YAAY,GAAI,CACxC,CACT;IACL,CAAC;IAEM,yCAAoB,GAA3B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAChC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACnE,CAAC;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,2EAA2E;IAC3E,yEAAyE;IACzE,uBAAuB;IACf,uCAAkB,GAA1B,UAA2B,MAAyB;QAChD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACV,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QACpC,CAAC;QACD,IAAM,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC;IACpD,CAAC;IAED,4EAA4E;IAC5E,yEAAyE;IACzE,uBAAuB;IACf,uCAAkB,GAA1B,UAA2B,MAAyB;QAChD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACV,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QACpC,CAAC;QACD,IAAM,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC;IACpD,CAAC;IAEO,kCAAa,GAArB;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAEO,kCAAa,GAArB;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAEO,oCAAe,GAAvB;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,qCAAgB,GAAxB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YAC9C,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QACpC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1D,IAAI,CAAC,cAAc,GAAG,IAAI,+BAAc,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBACxE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAChC,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;oBAC/B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;gBACpC,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,OAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;YACnD,CAAC;QACL,CAAC;IACL,CAAC;IAEO,oDAA+B,GAAvC;QACI,MAAM,CAAC,CACH,6BAAK,SAAS,EAAC,+CAA+C;YAC1D,6BAAK,SAAS,EAAC,qBAAqB;gBAChC,gCAAQ,SAAS,EAAC,yBAAyB,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa,iBAAqB;gBAC5F,gCAAQ,SAAS,EAAC,4BAA4B,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa,oBAAwB,CAChG,CACJ,CACT;IACL,CAAC;IAEO,yCAAoB,GAA5B;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACpD,IAAM,aAAa,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAExD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,CACH,6BAAK,SAAS,EAAC,iCAAiC;YAC3C,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAC9B,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACpC,IAAI,CAAC,+BAA+B,EAAE;YACvC,oBAAC,uBAAU,IAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,GAAI,CACnD,CACT;IACL,CAAC;IAEO,wCAAmB,GAA3B;QACI,EAAE,CAAC,CAAC,SAAS,CAAC,iBAAiB,KAAK,KAAK,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,OAAO,CAAC,kDAAuC,EAAE,CAAC,CAAC;YACxD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEO,4BAAO,GAAf,UAAgB,KAAsB;QAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEO,6CAAwB,GAAhC;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/D,MAAM,CAAC;QACX,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;IACjC,CAAC;IAEO,+CAA0B,GAAlC;QAAA,iBAIC;QAHG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,GAAG,CAAmB,UAAC,EAAU;YAC1E,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,4CAAuB,GAA/B,UAAgC,OAAgB;QAC5C,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACV,OAAO,CAAC,IAAI,CAAC,6CAA6C,CAAC;YAC3D,MAAM,CAAC;QACX,CAAC;QACD,IAAM,KAAK,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;QACzC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACT,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC;YACzD,MAAM;QACV,CAAC;QACD,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IAC5B,CAAC;IAEO,4CAAuB,GAA/B,UAAgC,OAAgB;QAC5C,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACV,OAAO,CAAC,IAAI,CAAC,6CAA6C,CAAC;YAC3D,MAAM,CAAC;QACX,CAAC;QACD,IAAM,KAAK,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;QACzC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACT,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC;YACzD,MAAM;QACV,CAAC;QACD,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IAC5B,CAAC;IAEO,yCAAoB,GAA5B,UAA6B,MAAwB,EAAE,OAAgB;QACnE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC;gBACV,WAAW,eACJ,IAAI,CAAC,KAAK,CAAC,WAAW,IACzB,YAAY,EAAE,OAAO,GACxB;aACJ,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC;gBACV,aAAa,eACN,IAAI,CAAC,KAAK,CAAC,aAAa,eAC1B,MAAM,CAAC,EAAE,iBACH,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,IACtC,YAAY,EAAE,OAAO,SAE5B;aACJ,CAAC;QACN,CAAC;QACD,IAAM,OAAO,GAAG,wCAA6B,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;;IAC9C,CAAC;IAEO,yCAAoB,GAA5B,UAA6B,MAAwB,EAAE,OAAgB;QACnE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC;gBACV,WAAW,eACJ,IAAI,CAAC,KAAK,CAAC,WAAW,IACzB,YAAY,EAAE,OAAO,GACxB;aACJ,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC;gBACV,aAAa,eACN,IAAI,CAAC,KAAK,CAAC,aAAa,eAC1B,MAAM,CAAC,EAAE,iBACH,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,IACtC,YAAY,EAAE,OAAO,SAE5B;aACJ,CAAC;QACN,CAAC;QACD,IAAM,OAAO,GAAG,wCAA6B,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;;IAC9C,CAAC;IAEO,iCAAY,GAApB,UAAqB,MAAwB;QACzC,IAAI,SAAS,GAAG,mBAAmB,CAAC;QACpC,IAAI,KAAK,CAAC;QACV,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,SAAS,GAAG,kBAAkB,CAAC;YAC/B,KAAK,GAAG,IAAI,CAAC;QACjB,CAAC;QAED,MAAM,CAAC,CACH,oBAAC,eAAM,IACH,GAAG,EAAE,MAAM,CAAC,EAAE,EACd,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,MAAM,CAAC,MAAM,EACrB,KAAK,EAAE,KAAK,GACd,CACL;IACL,CAAC;IAEO,gCAAW,GAAnB,UAAoB,OAA6B;QAC7C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAEO,6BAAQ,GAAhB,UAAiB,IAAY;QACzB,IAAM,OAAO,GAAG,oCAAyB,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAEO,8BAAS,GAAjB;QAAA,iBAaC;QAZG,kDAAkD;QAClD,IAAM,OAAO,GAAG,mCAAwB,EAAE;QAC1C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAE1B,gEAAgE;QAChE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAExB,2CAA2C;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,UAAC,EAAU;YACjD,mFAAmF;YACnF,KAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;QACrC,CAAC,CAAC;IACN,CAAC;IAEO,iCAAY,GAApB;QAAA,iBAmBC;QAlBG,0HAA0H;QAC1H,SAAS,CAAC,IAAI,CAAC;YACX,EAAE,CAAC,CAAC,SAAS,CAAC,6BAA6B,KAAK,KAAK,CAAC,CAAC,CAAC;gBACpD,KAAI,CAAC,OAAO,CAAC,iDAAsC,EAAE,CAAC;YAC1D,CAAC;YACD,EAAE,CAAC,CAAC,SAAS,CAAC,iCAAiC,KAAK,KAAK,CAAC,CAAC,CAAC;gBACxD,KAAI,CAAC,OAAO,CAAC,8CAAmC,EAAE,CAAC;YACvD,CAAC;QACL,CAAC,CAAC;QAEF,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,uBAAuB,CAAC;aACvD,IAAI,CAAC,gBAAM;YACR,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC;YAC7B,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBACxB,eAAe,EAAE,KAAK;aACzB,CAAC,CAAC;QACP,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC1C,CAAC;IAEO,mCAAc,GAAtB;QAAA,iBA8BC;QA7BG,IAAM,wBAAwB,GAAG;YAC7B,KAAK,EAAE;gBACH,SAAS,EAAE;oBACP,iBAAiB,EAAE,SAAS;oBAC5B,mBAAmB,EAAE,EAAE;oBACvB,QAAQ,EAAE,MAAM,CAAC,KAAK,GAAG,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI;oBACnD,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI;iBACzD;aACJ;YACD,KAAK,EAAE,KAAK;SACf,CAAC;QAEF,qCAAe,CAAC,QAAQ,CAAC,gBAAgB,EAAE;aACtC,IAAI,CAAC,kBAAQ;YACV,wBAAwB,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YACxE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,wBAA+B,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAM;YACV,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,IAAI,KAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzE,qEAAqE;gBACrE,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,CAAC;YAED,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAI,CAAC,kBAAkB,CAAC;YAC7D,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBACxB,eAAe,EAAE,IAAI;aACxB,CAAC,CAAC;QAEP,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAAA,CAAC;IAC3C,CAAC;IAEO,uCAAkB,GAA1B,UAA2B,CAAM;QAC7B,6CAA6C;QAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEO,yCAAoB,GAA5B,UAA6B,KAAuB;QAChD,kGAAkG;QAClG,IAAI,CAAC,OAAO,CAAC,4CAAiC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3D,CAAC;IAEO,mCAAc,GAAtB,UAAuB,MAAmB,EAAE,gBAA4C;QAAxF,iBAyBC;QAxBG,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC;YACV,WAAW,eACJ,IAAI,CAAC,KAAK,CAAC,WAAW,EACtB,gBAAgB,IACnB,MAAM,UACN,KAAK,EAAE,IAAI,GACd;SACJ,EAAE;YACC,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAEtD,EAAE,CAAC,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACtC,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBAClD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACZ,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;oBACvC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;gBACtC,CAAC;gBACD,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC;QACL,CAAC;IACL,CAAC;IAEO,uCAAkB,GAA1B;QAAA,iBAoBC;QAnBG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC;QACX,CAAC;QAED,sFAAsF;QACtF,IAAM,YAAY,GAAG,uCAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACvE,YAAY,CAAC,EAAE,CAAC,UAAU,EAAE;YACxB,IAAM,OAAO,GAAG,yCAA8B,CAAC,IAAI,CAAC,CAAC;YACrD,KAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC;QAC7C,CAAC,CAAC;QACF,YAAY,CAAC,EAAE,CAAC,kBAAkB,EAAE;YAChC,IAAM,OAAO,GAAG,yCAA8B,CAAC,KAAK,CAAC,CAAC;YACtD,KAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC;QAC7C,CAAC,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,gBAAE,CAAC,CAAC;IACpC,CAAC;IAED,8EAA8E;IACtE,gDAA2B,GAAnC,UAAoC,OAA4B;QAAhE,iBAIC;QAHG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAC,EAAU;YAC9C,KAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,EAAE,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,6CAAwB,GAAhC,UAAiC,OAA4B,EAAE,EAAU;QACrE,IAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QAEhD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,yBAAuB,EAAE,oBAAiB,CAAC,CAAC;YACxD,MAAM;QACV,CAAC;QACD,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,KAAK,4BAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,yBAAuB,EAAE,sBAAmB,CAAC,CAAC;YAC1D,MAAM;QACV,CAAC;QAED,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9C,CAAC;IAEO,0CAAqB,GAA7B,UAA8B,OAA6B;QACvD,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACnB,KAAK,MAAM;gBACP,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC3C,KAAK,SAAS;gBACV,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC9C,KAAK,YAAY;gBACb,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;YACjD,KAAK,WAAW;gBACZ,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;YAChD,KAAK,OAAO;gBACR,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAC5C,KAAK,QAAQ;gBACT,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;YAC7C;gBACI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QACjD,CAAC;IACL,CAAC;IAEO,sCAAiB,GAAzB,UAA0B,OAAyB;QAC/C,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,eAAO,IAAI,CAAC,KAAK,CAAC,WAAW,IAAE,EAAE,EAAE,OAAO,CAAC,EAAE,GAAE,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,8HAA8H;IACtH,yCAAoB,GAA5B,UAA6B,OAA4B;QAAzD,iBA6BC;QA5BG,IAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,OAAO,CAAC,IAAI,CAAC,6CAA6C,CAAC;YAC3D,MAAM;QACV,CAAC;QAED,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,kFAAkF;QAClF,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,0DAA0D,GAAG,EAAE,CAAC,CAAC;YAC7E,MAAM;QACV,CAAC;QACD,IAAM,cAAc,GAAG,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;QAEzD,2FAA2F;QAC3F,sFAAsF;QACtF,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpD,IAAM,WAAW,GAAG,cAAc,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;YACpE,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YACnD,cAAc,CAAC,WAAW,EAAE;iBACvB,IAAI,CAAC,4BAAkB,IAAI,YAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,OAAO,EAAE,EAAE,CAAC,EAA5D,CAA4D,CAAC;iBACxF,KAAK,CAAC,aAAG;gBACN,KAAI,CAAC,OAAO,CAAC,2CAAgC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC;QACV,CAAC;IACL,CAAC;IAEO,iDAA4B,GAApC,UAAqC,WAA2B,EAAE,EAAU;QAA5E,iBASC;QARG,IAAI,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACb,6GAA6G;YAC7G,gFAAgF;YAChF,OAAO,CAAC,GAAG,CAAC,8BAA4B,UAAU,gBAAW,EAAE,+BAA0B,WAAa,CAAC;QAC3G,CAAC;QACD,WAAW,CAAC,SAAS,GAAG,UAAC,YAAY,IAAO,KAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,EAAE,CAAC,EAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;IACxC,CAAC;IAEO,6CAAwB,GAAhC,UAAiC,EAAU;QAA3C,iBAoCC;QAnCG,IAAM,cAAc,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC9E,uCAAuC;QACvC,cAAc,CAAC,cAAc,GAAG,UAAC,KAAK;YAClC,KAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,EAAE,CAAC;QACtC,CAAC,CAAC;QACF,cAAc,CAAC,WAAW,GAAG,UAAC,KAAK;YAC/B,KAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,EAAE,CAAC;QAC3C,CAAC,CAAC;QACF,cAAc,CAAC,cAAc,GAAG,UAAC,KAAK;YAClC,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC;QACD,cAAc,CAAC,aAAa,GAAG,UAAC,KAAK;YACjC,KAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,EAAE,CAAC;QAC7C,CAAC,CAAC;QACF,cAAc,CAAC,mBAAmB,GAAG,UAAC,KAAK;YACvC,sDAAsD;YACtD,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,EAAE,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;YAC3E,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,gDAAgD,EAAE,cAAc,CAAC,CAAC;gBAC9E,iJAAiJ;gBACjJ,KAAI,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;gBAC/B,cAAc,CAAC,WAAW,EAAE;qBACvB,IAAI,CAAC,4BAAkB,IAAI,YAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,OAAO,EAAE,EAAE,CAAC,EAA5D,CAA4D,CAAC;qBACxF,KAAK,CAAC,aAAG;oBACN,KAAI,CAAC,OAAO,CAAC,2CAAgC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC5D,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAChC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC5D,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC;QAE1C,MAAM,CAAC,cAAc,CAAC;IAC1B,CAAC;IAEO,uCAAkB,GAA1B,UAA2B,KAAgC,EAAE,EAAU;QACnE,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAClB,IAAM,OAAO,GAAG,yCAA8B,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC;IACL,CAAC;IAEO,2CAAsB,GAA9B,UAA+B,kBAAyC,EAAE,IAAY,EAAE,EAAU;QAAlG,iBAqBC;QApBG,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;YACpE,MAAM;QACV,CAAC;QAED,IAAI,OAAO,CAAC;QACZ,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;YACnB,OAAO,GAAG,qCAA0B,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC3B,OAAO,GAAG,sCAA2B,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;QAClE,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,cAAc,CAAC,mBAAmB,CAAC,kBAAkB,CAAC;iBACjD,KAAK,CAAC,aAAG;gBACN,KAAI,CAAC,OAAO,CAAC,mDAAwC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACnE,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC;IACL,CAAC;IAEO,4CAAuB,GAA/B,UAAgC,KAAuB,EAAE,EAAU;QAC/D,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,QAAQ,CAAC;gBACV,aAAa,eACN,IAAI,CAAC,KAAK,CAAC,aAAa,eAC1B,EAAE,iBACI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,IAC/B,EAAE,EAAE,EAAE,EACN,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,KAAK,EAAE,KAAK,EACZ,YAAY,EAAE,IAAI,EAClB,YAAY,EAAE,IAAI,SAEzB;aACJ,CAAC;QACN,CAAC;;IACL,CAAC;IAEO,8CAAyB,GAAjC,UAAkC,KAA0B,EAAE,EAAU;QACpE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACzD,CAAC;IACL,CAAC;IAEO,6CAAwB,GAAhC,UAAiC,KAAmB,EAAE,EAAU;QAC5D,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,IAAM,OAAO,GAAwB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5D,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnB,KAAK,QAAQ;oBACT,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;gBACjD,KAAK,OAAO;oBACR,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;gBAChD,KAAK,OAAO;oBACR,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;gBAChD;oBACI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC;YACzD,CAAC;QACL,CAAC;IACL,CAAC;IAEO,wCAAmB,GAA3B,UAA4B,EAAU,EAAE,OAAkC;QACtE,IAAI,CAAC,QAAQ,CAAC;YACV,aAAa,eACN,IAAI,CAAC,KAAK,CAAC,aAAa,eAC1B,EAAE,iBACI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,IAC/B,UAAU,EAAE,OAAO,CAAC,UAAU,SAErC;SACJ,CAAC;;IACN,CAAC;IAEO,uCAAkB,GAA1B,UAA2B,EAAU,EAAE,OAAiC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC;gBACV,WAAW,eACJ,IAAI,CAAC,KAAK,CAAC,WAAW,IACzB,YAAY,EAAE,OAAO,CAAC,OAAO,GAChC;aACJ,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC;gBACV,aAAa,eACN,IAAI,CAAC,KAAK,CAAC,aAAa,eAC1B,EAAE,iBACI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,IAC/B,YAAY,EAAE,OAAO,CAAC,OAAO,SAEpC;aACJ,CAAC;QACN,CAAC;;IACL,CAAC;IAEO,uCAAkB,GAA1B,UAA2B,EAAU,EAAE,OAAiC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC;gBACV,WAAW,eACJ,IAAI,CAAC,KAAK,CAAC,WAAW,IACzB,YAAY,EAAE,OAAO,CAAC,OAAO,GAChC;aACJ,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC;gBACV,aAAa,eACN,IAAI,CAAC,KAAK,CAAC,aAAa,eAC1B,EAAE,iBACI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,IAC/B,YAAY,EAAE,OAAO,CAAC,OAAO,SAEpC;aACJ,CAAC;QACN,CAAC;;IACL,CAAC;IAED,mIAAmI;IAC3H,4CAAuB,GAA/B,UAAgC,OAA+B;QAC3D,IAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACtB,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;QACtD,IAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QAEhD,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACjB,cAAc,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,IAAI,CAAC,sDAAsD,EAAE,EAAE,CAAC,CAAC;QAC7E,CAAC;QAED,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,WAAW,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,IAAI,CAAC,wDAAwD,EAAE,EAAE,CAAC,CAAC;QAC/E,CAAC;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAC7B,IAAM,aAAa,gBACZ,IAAI,CAAC,KAAK,CAAC,aAAa,CAC9B;QACD,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC;YACV,aAAa;SAChB,CAAC;IACN,CAAC;IAEO,2CAAsB,GAA9B,UAA+B,OAAsC;QACjE,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;QACxB,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;YACpE,MAAM;QACV,CAAC;QAED,sJAAsJ;QACtJ,EAAE,CAAC,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACnC,IAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACtE,cAAc,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAChD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC9C,CAAC;QACL,CAAC;IACL,CAAC;IAED,4FAA4F;IAC5F,yDAAyD;IACjD,0CAAqB,GAA7B,UAA8B,SAA8B;QACxD,MAAM,CAAC,IAAI,eAAe,CAAC,SAAS,CAAC;IACzC,CAAC;IAED,4HAA4H;IACpH,uCAAkB,GAA1B,UAA2B,OAAkC;QAA7D,iBAwBC;QAvBG,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;QACxB,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;QAEtD,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,IAAI,CAAC,iDAAiD,EAAE,EAAE,CAAC,CAAC;YACpE,MAAM;QACV,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,cAAc,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAErE,IAAM,qBAAqB,GAAG,OAAO,CAAC,kBAAkB,CAAC;QACzD,cAAc;aACT,oBAAoB,CAAC,qBAAqB,CAAC;aAC3C,IAAI,CAAC;YACF,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAM,OAAO,GAAG,cAAc,CAAC,YAAY,EAAE;YAC7C,OAAO,CAAC,KAAK,CAAC,aAAG;gBACb,KAAI,CAAC,OAAO,CAAC,4CAAiC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;YAC7D,CAAC,CAAC;YACF,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC,CAAC;aACD,IAAI,CAAC,4BAAkB,IAAI,YAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,QAAQ,EAAE,EAAE,CAAC,EAA7D,CAA6D,CAAC;QAC9F,mCAAmC;IACvC,CAAC;IAEO,wCAAmB,GAA3B,UAA4B,OAAmC;QAA/D,iBAgBC;QAfG,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;QACxB,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;QAEtD,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,IAAI,CAAC,kDAAkD,EAAE,EAAE,CAAC,CAAC;YACrE,MAAM;QACV,CAAC;QAED,IAAM,qBAAqB,GAAG,OAAO,CAAC,kBAAkB,CAAC;QACzD,cAAc;aACT,oBAAoB,CAAC,qBAAqB,CAAC;aAC3C,IAAI,CAAC,cAAM,YAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAA1B,CAA0B,CAAC;aACtC,KAAK,CAAC,aAAG;YACN,KAAI,CAAC,OAAO,CAAC,oDAAyC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC;IACV,CAAC;IAEO,sCAAiB,GAAzB,UAA0B,EAAU;QAChC,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,IAAI,CAAC,gDAAgD,EAAE,EAAE,CAAC,CAAC;YACnE,MAAM;QACV,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACpC,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;gBAC9C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACZ,IAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;oBAC9D,cAAc,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;gBACpD,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAEO,0CAAqB,GAA7B,UAA8B,EAAU;QACpC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;IACnC,CAAC;IAEO,uCAAkB,GAA1B,UAA2B,EAAU;QACjC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;IAChC,CAAC;IACL,iBAAC;AAAD,CAAC,CAryB+B,KAAK,CAAC,SAAS,GAqyB9C;AAryBY,gCAAU;;;;;;;;;;;ACzGV,6BAAqB,GAAG;IACjC,UAAU,EAAE,YAAY;IACxB,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,QAAQ;CACnB;;;;;;;;;;;AC6CY,uBAAe,GAAG;IAC3B,iBAAiB,EAAE,kCAAkC;IACrD,cAAc,EAAE,+BAA+B;IAC/C,mBAAmB,EAAE,oCAAoC;IACzD,oBAAoB,EAAE,qCAAqC;IAC3D,WAAW,EAAE,4BAA4B;IACzC,YAAY,EAAE,6BAA6B;IAC3C,kBAAkB,EAAE,mCAAmC;IACvD,YAAY,EAAE,6BAA6B;CAC9C;;;;;;;;;;;;;;AC3DD,mCAAoC;AACpC,mCAAqC;AACrC,mCAA+B;;;;;;;;;;;ACM/B,mCAA0C,IAAY;IAClD,MAAM,CAAC;QACH,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACb;AACL,CAAC;AALD,8DAKC;AAED,wCAA+C,SAA8B,EAAE,EAAU;IACrF,MAAM,CAAC;QACH,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,SAAS;QACpB,EAAE,EAAE,EAAE;KACT;AACL,CAAC;AAND,wEAMC;AAED,oCAA2C,kBAAyC,EAAE,EAAU;IAC5F,MAAM,CAAC;QACH,IAAI,EAAE,OAAO;QACb,kBAAkB,EAAE,kBAAkB;QACtC,EAAE,EAAE,EAAE;KACT;AACL,CAAC;AAND,gEAMC;AAED,qCAA4C,kBAAyC,EAAE,EAAU;IAC7F,MAAM,CAAC;QACH,IAAI,EAAE,QAAQ;QACd,kBAAkB,EAAE,kBAAkB;QACtC,EAAE,EAAE,EAAE;KACT;AACL,CAAC;AAND,kEAMC;AAED;IACI,MAAM,CAAC;QACH,IAAI,EAAE,KAAK;KACd;AACL,CAAC;AAJD,4DAIC;;;;;;;;;;;ACrCD,wCAA+C,UAAmB;IAC9D,MAAM,CAAC;QACH,IAAI,EAAE,QAAQ;QACd,UAAU,EAAE,UAAU;KACzB;AACL,CAAC;AALD,wEAKC;AAED,uCAA8C,EAAU,EAAE,OAAgB;IACtE,MAAM,CAAC;QACH,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,OAAO;QAChB,EAAE;KACL;AACL,CAAC;AAND,sEAMC;AAED,uCAA8C,EAAU,EAAE,OAAgB;IACtE,MAAM,CAAC;QACH,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,OAAO;QAChB,EAAE;KACL;AACL,CAAC;AAND,sEAMC;;;;;;;;;;;ACzBD;IACI,MAAM,CAAC;QACH,IAAI,EAAE,kCAAkC;KAC3C;AACL,CAAC;AAJD,wFAIC;AAED;IACI,MAAM,CAAC;QACH,IAAI,EAAE,+BAA+B;KACxC;AACL,CAAC;AAJD,kFAIC;AAED,kDAAyD,KAAU,EAAE,EAAU;IAC3E,MAAM,CAAC;QACH,IAAI,EAAE,oCAAoC;QAC1C,KAAK;QACL,EAAE;KACL;AACL,CAAC;AAND,4FAMC;AAED,mDAA0D,KAAU,EAAE,EAAU;IAC5E,MAAM,CAAC;QACH,IAAI,EAAE,qCAAqC;QAC3C,KAAK;QACL,EAAE;KACL;AACL,CAAC;AAND,8FAMC;AAED,0CAAiD,KAAU,EAAE,EAAU;IACnE,MAAM,CAAC;QACH,IAAI,EAAE,4BAA4B;QAClC,KAAK;QACL,EAAE;KACL;AACL,CAAC;AAND,4EAMC;AAED,2CAAkD,KAAU,EAAE,EAAU;IACpE,MAAM,CAAC;QACH,IAAI,EAAE,6BAA6B;QACnC,KAAK;QACL,EAAE;KACL;AACL,CAAC;AAND,8EAMC;AAED;IACI,MAAM,CAAC;QACH,IAAI,EAAE,mCAAmC;KAC5C;AACL,CAAC;AAJD,0FAIC;AAED,2CAAkD,KAAU;IACxD,MAAM,CAAC;QACH,IAAI,EAAE,6BAA6B;QACnC,KAAK;KACR;AACL,CAAC;AALD,8EAKC;;;;;;;;;;;ACzDD,6CAA8C;AAI9C,IAAM,gBAAgB,GAAG,EAAE,CAAC,CAAC,QAAQ;AACrC,IAAM,sBAAsB,GAAG,GAAG,CAAC,CAAC,QAAQ;AAE5C;IAII,wBAAY,WAAwB;QAH5B,gBAAW,GAAU,EAAE,CAAC;QAI5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAEM,kCAAS,GAAhB;QACI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;IAC/B,CAAC;IAEM,8BAAK,GAAZ;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC9C,CAAC;IACL,CAAC;IAEM,6BAAI,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC;IACL,CAAC;IAEM,iCAAQ,GAAf,UAAgB,QAAgB;QAC5B,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;QAChE,IAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAE7C,2BAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACrC,UAAU,CAAC;YACP,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,EAAE,sBAAsB,CAAC,CAAC;IAC/B,CAAC;IAEO,uCAAc,GAAtB,UAAuB,WAAwB;QAC3C,IAAI,CAAC;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;YAC9E,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC7D,CAAC;QACD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACT,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;IACL,CAAC;IAEO,kCAAS,GAAjB;QACI,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAC1C,CAAC;IAEO,wCAAe,GAAvB,UAAwB,KAAU;QAC9B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;IACL,CAAC;IAEO,2CAAkB,GAA1B;QACI,IAAI,OAAO,GAAG,EAAE,QAAQ,EAAE,uBAAuB,EAAE,CAAC;QACpD,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnD,OAAO,GAAG,EAAE,QAAQ,EAAE,uBAAuB,EAAE,CAAC;YAChD,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnD,OAAO,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;gBACrC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,mBAAmB,CAAC,CAAC;oBACpD,OAAO,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;gBAC/B,CAAC;YACL,CAAC;QACL,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,qBAAC;AAAD,CAAC;AAzEY,wCAAc;;;;;;;;ACP3B,e;;;;;;;;;;ACAa,aAAK,GAAiC;IAC/C,SAAS,EAAE,oCAAoC;IAC/C,iBAAiB,EAAE,uCAAuC;CAC7D;AAEY,eAAO,GAAG;IACnB,IAAI,EAAE,8BAA8B;IACpC,MAAM,EAAE,gCAAgC;CAC3C;AAEY,cAAM,GAAG;IAClB,qBAAqB,EAAE,uBAAuB;CACjD;AAUD,4BAAmC,OAAiB;IAChD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,aAAK,CAAC,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,aAAK,CAAC,IAAI,CAAC,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;IAED,MAAM,CAAC,KAAK,CAAC;AACjB,CAAC;AAZD,gDAYC;;;;;;;;;;;;;;AClCD,kCAAyB;AACzB,kCAA6B;;;;;;;;;;;;;;ACD7B,mCAA0B;AAC1B,kCAAgC;AAChC,kCAA4B;AAC5B,kCAAmC;AAInC,kCAA6C;AAC7C,kCAAyC;;;;;;;;;;;ACNzC,iDAAsD;AACtD,8CAAgD;AAGhD,iBAAwB,GAAW;IAC/B,MAAM,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;AAC/B,CAAC;AAFD,0BAEC;AAED,mFAAmF;AACnF,8EAA8E;AAC9E,6EAA6E;AAC7E,6EAA6E;AAC7E,mBAAmB;AACnB;IAKI,oBAAY,GAAW;QAAvB,iBAeC;QAdG,IAAI,CAAC,IAAI,GAAG,IAAI,mCAAgB,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,UAAC,GAAG;YACtB,EAAE,CAAC,CAAC,KAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBAC5B,KAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE;oBAC3B,KAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;gBAC1C,CAAC,CAAC;gBACF,MAAM;YACV,CAAC;YACD,KAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,UAAC,GAAG;YAC/B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC;IACL,CAAC;IAMD,sBAAI,qCAAa;QAJjB,6EAA6E;QAC7E,0EAA0E;QAC1E,qEAAqE;QACrE,cAAc;aACd,UAAkB,OAAuC;YACrD,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;QACxC,CAAC;;;OAAA;IAEM,8BAAS,GAAhB,UAAiB,OAAuC;QACpD,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,UAAC,GAAG;YACnC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IAEM,4BAAO,GAAd,UAAe,GAAyB;QACpC,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEM,0BAAK,GAAZ;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;IACrB,CAAC;IACL,iBAAC;AAAD,CAAC;AA3CY,gCAAU;;;;;;;;;;;;;;ACfvB,kCAAqC;AACrC,kCAAkC;AAClC,kCAAsC;AACtC,kCAA+B;;;;;;;;;;;;;;;;;;;;;ACH/B,oCAA+B;AAC/B,kDAAoF;AAWpF;IAAwC,sCAA6C;IAEjF;QAAA,YACI,iBAAO,SAKV;QAJG,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjE,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjE,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC/D,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC/D,CAAC;IAEO,iDAAoB,GAA5B;QACI,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;IACpC,CAAC;IAEO,iDAAoB,GAA5B;QACI,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;IACpC,CAAC;IAEO,gDAAmB,GAA3B;QAAA,iBAYC;QAXG,mCAAe,CAAC,QAAQ,CAAC,oBAAoB,EAAE;aAC1C,IAAI,CAAC,mBAAS;YACX,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACZ,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;gBACnC,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,gCAAY,CAAC,QAAQ,CAAC,8FAA8F,CAAC,CAAC;YAC1H,CAAC;QACL,CAAC,CAAC;IACV,CAAC;IAEO,8CAAiB,GAAzB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;QACjC,CAAC;IACL,CAAC;IAED,mCAAM,GAAN;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,YAAY,GAAG,cAAc,CAAC;QACzE,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,eAAe,GAAG,cAAc,CAAC;QAC/E,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,cAAc,GAAG,MAAM,CAAC;QACpE,IAAM,YAAY,GAAG,QAAQ,CAAC;QAC9B,MAAM,CAAC,CACH,6BAAK,SAAS,EAAC,qBAAqB;YAChC,gCAAQ,SAAS,EAAC,yBAAyB,EAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,IAAG,QAAQ,CAAU;YAEnG,gCAAQ,SAAS,EAAC,4BAA4B,EAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,IAAG,WAAW,CAAU;YAGrG,IAAI,CAAC,KAAK,CAAC,iBAAiB,IAAI,mCAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBACnE,gCAAQ,SAAS,EAAC,0BAA0B,EAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,IAAG,SAAS,CAAU;YAGpG,IAAI,CAAC,KAAK,CAAC,eAAe;gBAC1B,gCAAQ,SAAS,EAAC,6BAA6B,EAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,IAAG,YAAY,CAAU,CAE1G,CACT;IACL,CAAC;IACL,yBAAC;AAAD,CAAC,CA5DuC,KAAK,CAAC,SAAS,GA4DtD;AA5DY,gDAAkB;;;;;;;;;;;;;;ACZ/B,mCAAsB;;;;;;;;;;;;;;ACGtB,mCAAwB;AACxB,mCAAwB;;;;;;;;;;;ACJxB,oCAA6B;AAE7B,4BAAmC,MAAmB;IAClD,MAAM,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;AACpC,CAAC;AAFD,gDAEC;AAED;IAGI,sBAAY,MAAmB;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAEM,yBAAE,GAAT,UAAU,KAAa,EAAE,OAAmC;QACxD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,UAAC,GAAQ,IAAK,cAAO,CAAC,GAAG,CAAC,EAAZ,CAAY,CAAC,CAAC;IACvD,CAAC;IAEM,2BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IACL,mBAAC;AAAD,CAAC;AAdY,oCAAY;;;;;;;;;;;ACNzB,yBAAgC,MAAmB;IAC/C,MAAM,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,UAAU,KAAK;QAC3C,KAAK,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,UAAU,KAAK;QAC3C,KAAK,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC,CAAC,CAAC;AACP,CAAC;AARD,0CAQC;;;;;;;;;;;ACRD;IAAA;IAkBA,CAAC;IAjBiB,qBAAQ,GAAtB,UAAuB,GAAW,EAAE,QAAiB;QACjD,0BAA0B;QAC1B,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QAEvB,oBAAoB;QACpB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC;QAED,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,kBAAkB;QAClB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IACL,mBAAC;AAAD,CAAC;AAlBY,oCAAY;;;;;;;;;;;ACAzB,6CAAsC;AACtC,uCAAkC;AAClC,uCAA6E;AAE7E,IAAM,2BAA2B,GAAG,IAAI,CAAC,CAAC,UAAU;AAEpD;IAMI;QALQ,qBAAgB,GAAuF,EAAE,CAAC;QAC1G,UAAK,GAAW,CAAC,CAAC;QAKtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAEM,kCAAQ,GAAf;QACI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;IAC1B,CAAC;IAEM,8CAAoB,GAA3B;QAAA,iBAUC;QATS,2CAAqD,EAAnD,YAAG,EAAE,oBAAO,CAAwC;QAC5D,MAAM,CAAC,UAAU,CAAC;YACd,IAAM,OAAO,GAAG,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAC9C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACV,OAAO,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACrC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC;QACL,CAAC,EAAE,2BAA2B,CAAC;QAC/B,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEM,0CAAgB,GAAvB;QACU,mDAA6D,EAA3D,YAAG,EAAE,oBAAO,CAAgD;QACpE,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEM,iCAAO,GAAd;QACI,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IAEO,8BAAI,GAAZ,UAAa,IAAY,EAAE,IAAU;QAArC,iBAiBC;QAhBG,IAAM,GAAG,GAAqB;YAC1B,IAAI;YACJ,IAAI;YACJ,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI;YAC5B,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE;SACnB;QAED,IAAM,OAAO,GAAG,IAAI,qBAAO,CAAC,UAAC,OAA8B,EAAE,MAA4B;YACrF,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,OAAO,WAAE,MAAM,UAAE,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC;YACH,GAAG;YACH,OAAO;SACV,CAAC;IACN,CAAC;IAEO,mCAAS,GAAjB,UAAkB,KAAU;QACxB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC;QACX,CAAC;QAED,IAAM,GAAG,GAAqB,KAAK,CAAC,IAAI,CAAC;QACzC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnC,kBAAkB;YAClB,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACtC,uBAAuB;YACvB,MAAM,CAAC;QACX,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC;IACL,CAAC;IAEO,mCAAS,GAAjB,UAAkB,GAAqB;QACnC,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,MAAM,CAAC;QACX,CAAC;QAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAErC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,KAAK,OAAO,CAAC,KAAK,CAAC,SAAS;gBACxB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACtB,KAAK,CAAC;YACV,KAAK,OAAO,CAAC,KAAK,CAAC,iBAAiB;gBAChC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;oBACZ,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;gBACD,KAAK,CAAC;YACV;gBACI,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;gBACrC,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IAlGa,wBAAQ,GAAG,IAAI,eAAe,EAAE,CAAC;IAmGnD,sBAAC;CAAA;AAvGY,0CAAe;;;;;;;;;;;;;;;;;;;;;ACN5B,oCAA+B;AAM9B,CAAC;AAEF;IAAgC,8BAAyC;IAIrE,oBAAY,KAAuB;QAAnC,YACI,kBAAM,KAAK,CAAC,SAGf;QADG,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACzC,CAAC;IAEM,sCAAiB,GAAxB;QAAA,iBAWC;QAVG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAE5C,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,MAAc;YACjD,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrB,uFAAuF;gBACvF,sGAAsG;gBACtG,IAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;gBACrD,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,gBAAgB,GAAG,GAAG,CAAC;YAClE,CAAC;QACL,CAAC,CAAC;IACN,CAAC;IAEM,yCAAoB,GAA3B;QACI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAEM,2BAAM,GAAb,UAAc,OAAuB;QACjC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;IACjC,CAAC;IAEM,2BAAM,GAAb;QACI,MAAM,CAAC,CACH,6BAAK,SAAS,EAAC,iBAAiB;YAC5B,6BAAK,SAAS,EAAC,sBAAsB,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,GAAI,CACxD,CACT;IACL,CAAC;IACL,iBAAC;AAAD,CAAC,CAtC+B,KAAK,CAAC,aAAa,GAsClD;AAtCY,gCAAU;;;;;;;;;;;;;;;;;;;;;ACRvB,oCAA+B;AAC/B,0CAAyC;AAYxC,CAAC;AAEF,IAAM,WAAW,GAAG;IAChB,SAAS,EAAE,iBAAiB;CAC/B;AAED;IAA4B,0BAAqC;IAG7D,gBAAY,KAAmB;QAA/B,YACI,kBAAM,KAAK,CAAC,SAEf;QADG,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC7C,CAAC;IAEM,kCAAiB,GAAxB;QACI,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IACpD,CAAC;IAEM,mCAAkB,GAAzB,UAA0B,SAAuB;QAC7C,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACzC,sCAAsC;YACtC,uEAAuE;YACvE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACpD,CAAC;IACL,CAAC;IAEO,yBAAQ,GAAhB,UAAiB,OAAyB;QACtC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;IAChC,CAAC;IAEM,uBAAM,GAAb;QACU,mBAAkD,EAAhD,wBAAS,EAAE,gBAAK,EAAE,oBAAO,EAAE,kBAAM,CAAgB;QAEzD,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,YAAY,CAAC,EAAE,OAAO,EAAE,OAAO;YAC5E,+BACI,KAAK,EAAE,MAAM,GAAG,WAAW,GAAG,SAAS,EACvC,SAAS,EAAC,kBAAkB,EAC5B,GAAG,EAAE,IAAI,CAAC,QAAQ,EAClB,QAAQ,EAAE,IAAI,EACd,KAAK,EAAE,KAAK,GACd,CACA,CACT;IACL,CAAC;IACL,aAAC;AAAD,CAAC,CAvC2B,KAAK,CAAC,aAAa,GAuC9C;AAvCY,wBAAM;;;;;;;;;;;AChBnB,gFAAgF;AAChF,iGAAiG;AACjG,2GAA2G;AAC3G,+FAA+F;AAC/F;IAUI,0BAAY,GAAW;QALvB,qCAAqC;QAC7B,cAAS,GAAqB,EAAE,CAAC;QACzC,qCAAqC;QAC7B,aAAQ,GAAoB,EAAE,CAAC;QAGnC,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAEO,qCAAU,GAAlB;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,2CAAgB,GAAxB;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC/B,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACnC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;QACL,CAAC;IACL,CAAC;IAEO,0CAAe,GAAvB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;QACL,CAAC;IACL,CAAC;IAEO,sCAAW,GAAnB,UAAoB,KAAY;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;IACL,CAAC;IAEO,sCAAW,GAAnB,UAAoB,KAAiB;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;IACL,CAAC;IAED,4EAA4E;IAC5E,+EAA+E;IAC/E,iFAAiF;IAC1E,+BAAI,GAAX,UAAY,OAAsB;QAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YACxC,MAAM;QACV,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAEM,gCAAK,GAAZ;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;IACrB,CAAC;IAEO,4CAAiB,GAAzB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACnD,CAAC;IAED,2EAA2E;IAC3E,qEAAqE;IACrE,oEAAoE;IACpE,gFAAgF;IACxE,wCAAa,GAArB,UAAsB,KAAmB;QACrC,IAAM,OAAO,GAAmB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM;QACV,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IAKD,sBAAI,uCAAS;QAHb,mFAAmF;QACnF,uFAAuF;QACvF,iCAAiC;aACjC,UAAc,OAA8B;YACxC,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;YAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAI,qCAAO;aAAX,UAAY,OAA+B;YACvC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAI,qCAAO;aAAX,UAAY,OAA+B;YACvC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAClC,CAAC;;;OAAA;IACL,uBAAC;AAAD,CAAC;AAnGY,4CAAgB;;;;;;;;;;;ACD7B,uDAAkE;AAClE,2DAA0E;AAE1E,kGAAkG;AAClG,uFAAuF;AACvF;IAAA;QAGY,uBAAkB,GAA2B,EAAE,CAAC;QAChD,mBAAc,GAAoB,EAAE;IA4FhD,CAAC;IA1FG,0HAA0H;IAC1H,wCAAwC;IACjC,2CAAmB,GAA1B,UAA2B,OAAuB;QAAlD,iBAaC;QAZG,IAAM,GAAG,GAAG,+CAAsB,CAAC,OAAO,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACP,OAAO,CAAC,GAAG,CAAC,6EAA6E,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9G,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,OAAO,CAAC,WAAC;gBACT,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YACH,MAAM;QACV,CAAC;QACD,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,8HAA8H;IACvH,+CAAuB,GAA9B,UAA+B,OAA6B;QACxD,IAAM,GAAG,GAAG,uDAA0B,CAAC,OAAO,CAAC,CAAC;QAChD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACP,OAAO,CAAC,GAAG,CAAC,uFAAuF,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YACnH,MAAM;QACV,CAAC;QACD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAGD,sBAAI,8CAAmB;QADvB,4GAA4G;aAC5G,UAAwB,OAAwC;YAC5D,IAAI,CAAC,wBAAwB,GAAG,OAAO,CAAC;YACxC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACrC,CAAC;;;OAAA;IAGD,sBAAI,0CAAe;QADnB,oGAAoG;aACpG,UAAoB,OAAoC;YACpD,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;YACpC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;;;OAAA;IAED,+FAA+F;IAC/F,6FAA6F;IACrF,iDAAyB,GAAjC;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC;QACX,CAAC;QACD,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACxC,IAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;YAChD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC;gBACxE,QAAQ;YACZ,CAAC;YACD,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC;IACL,CAAC;IAED,uFAAuF;IACvF,6FAA6F;IACrF,6CAAqB,GAA7B;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC;QACX,CAAC;QACD,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACpC,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;gBACpE,QAAQ;YACZ,CAAC;YACD,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC;IACL,CAAC;IAED,0GAA0G;IAC1G,yCAAyC;IACjC,6CAAqB,GAA7B,UAA8B,OAA6B;QACvD,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;YACvC,MAAM;QACV,CAAC;QACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,sGAAsG;IACtG,yCAAyC;IACjC,yCAAiB,GAAzB,UAA0B,OAAsB;QAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM;QACV,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IACL,oBAAC;AAAD,CAAC;AAhGY,sCAAa;;;;;;;;;;;ACU1B,sFAAsF;AACtF,iGAAiG;AACjG,oFAAoF;AACpF,mFAAmF;AACnF,gCAAuC,OAAuB;IAC1D,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxB,KAAK,OAAO;YACR,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC;QACvD,KAAK,QAAQ;YACT,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACzD,KAAK,WAAW;YACZ,MAAM,CAAC,yBAAyB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5D,KAAK,QAAQ;YACT,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACzD,KAAK,MAAM;YACP,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACvD,KAAK,SAAS;YACV,MAAM,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC1D,KAAK,MAAM;YACP,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACvD,KAAK,YAAY;YACb,MAAM,CAAC,0BAA0B,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7D;YACI,MAAM,CAAC,SAAS,CAAC;IACzB,CAAC;AACL,CAAC;AArBD,wDAqBC;AAED,iCAAiC,IAA0B,EAAE,OAAuB;IAChF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAsB,WAAC;QACxC,MAAM,CAAC;YACH,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,CAAC,CAAC,EAAE;SACX;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAED,oCAAoC,IAA6B,EAAE,OAAuB;IACtF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsB,YAAE;QAC9C,MAAM,CAAC;YACH,IAAI,EAAE,SAAS;YACf,EAAE;SACL;IACL,CAAC,CAAC;AACN,CAAC;AAED,8BAA8B,IAAuB,EAAE,OAAuB;IAC1E,MAAM,CAAC;QACH,IAAI,EAAE,MAAM;QACZ,EAAE,EAAE,IAAI,CAAC,EAAE;KACd;AACL,CAAC;AAED,8BAA8B,IAAuB,EAAE,OAAuB;IAC1E,MAAM,CAAC;QACH,IAAI,EAAE,YAAY;QAClB,EAAE,EAAE,IAAI,CAAC,EAAE;KACd;AACL,CAAC;AAED,gCAAgC,IAAyB,EAAE,OAAuB;IAC9E,MAAM,CAAC;QACH,IAAI,EAAE,SAAS;QACf,EAAE,EAAE,IAAI,CAAC,EAAE;KACd;AACL,CAAC;AAED,mCAAmC,IAA4B,EAAE,OAAuB;IACpF,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAChB,OAAO,CAAC,IAAI,CAAC,gGAAgG,CAAC;QAC9G,MAAM,CAAC;IACX,CAAC;IACD,MAAM,CAAC;QACH,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,IAAI,EAAE,OAAO,CAAC,IAAI;KACrB;AACL,CAAC;AAED,gCAAgC,IAAyB,EAAE,OAAuB;IAC9E,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAChB,OAAO,CAAC,IAAI,CAAC,0FAA0F,CAAC;QACxG,MAAM,CAAC;IACX,CAAC;IACD,MAAM,CAAC;QACH,IAAI,EAAE,QAAQ;QACd,kBAAkB,EAAE,IAAI,CAAC,MAAM;QAC/B,IAAI,EAAE,OAAO,CAAC,IAAI;KACrB;AACL,CAAC;AAED,+BAA+B,IAAwB,EAAE,OAAuB;IAC5E,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAChB,OAAO,CAAC,IAAI,CAAC,wFAAwF,CAAC;QACtG,MAAM,CAAC;IACX,CAAC;IACD,MAAM,CAAC;QACH,IAAI,EAAE,OAAO;QACb,kBAAkB,EAAE,IAAI,CAAC,KAAK;QAC9B,IAAI,EAAE,OAAO,CAAC,IAAI;KACrB;AACL,CAAC;;;;;;;;;;;;;;;;;;;ACxHD,0CAKqB;AAgBrB,0FAA0F;AAC1F,iGAAiG;AACjG,oFAAoF;AACpF,sFAAsF;AACtF,oCAA2C,OAA6B;IACpE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,KAAK,MAAM;YACP,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACzC,KAAK,QAAQ;YACT,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAC3C,KAAK,OAAO;YACR,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAC1C,KAAK,WAAW;YACZ,MAAM,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;QAC9C;YACI,OAAO,CAAC,GAAG,CAAC,2DAA2D,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YACvF,MAAM,CAAC;IACf,CAAC;AACL,CAAC;AAdD,gEAcC;AAED,8BAA8B,OAAyB;IAClD,qEAAqE;IACtE,MAAM,CAAC,8BAAkB,CAAC;QACtB,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,OAAO,EAAE,EAAE;QACX,EAAE,EAAE,EAAE;KACT,CAAC;AACN,CAAC;AAED,gCAAgC,OAAmC;IAC/D,MAAM,CAAC,+BAAmB,CAAC;QACvB,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,OAAO,CAAC,kBAAkB;QAClC,EAAE,EAAE,OAAO,CAAC,EAAE;KACjB,CAAC;AACN,CAAC;AAED,+BAA+B,OAAkC;IAC7D,MAAM,CAAC,8BAAkB,CAAC;QACtB,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,OAAO,CAAC,kBAAkB;QACjC,EAAE,EAAE,OAAO,CAAC,EAAE;KACjB,CAAC;AACN,CAAC;AAED,mCAAmC,OAAsC;IACrE,IAAM,SAAS,gBACR,OAAO,CAAC,SAAS,IACpB,IAAI,EAAE,WAAW,GACpB;IACD,MAAM,CAAC,kCAAsB,CAAC;QAC1B,IAAI,EAAE,WAAW;QACjB,EAAE,EAAE,OAAO,CAAC,EAAE;QACd,SAAS;KACZ,CAAC,CAAC;AACP,CAAC;;;;;;;;;;;AC9DD,4BAAmC,KAAyB;IACxD,MAAM,CAAC;QACH,IAAI,EAAE,OAAO;QACb,KAAK;KACR;AACL,CAAC;AALD,gDAKC;AAED,6BAAoC,MAA2B;IAC3D,MAAM,CAAC;QACH,IAAI,EAAE,QAAQ;QACd,MAAM;KACT;AACL,CAAC;AALD,kDAKC;AAED,gCAAuC,SAAiC;IACpE,MAAM,CAAC;QACH,IAAI,EAAE,WAAW;QACjB,SAAS;KACZ;AACL,CAAC;AALD,wDAKC;AAED,4BAAmC,KAAyB;IACxD,MAAM,CAAC;QACH,IAAI,EAAE,OAAO;QACb,KAAK;KACR;AACL,CAAC;AALD,gDAKC;;;;;;;;;;;AC1CD,wBAAsB;AACtB,oCAA+B;AAC/B,wCAAsC;AACtC,qCAAuC;AAEvC,QAAQ,CAAC,MAAM,CACX,oBAAC,SAAG,OAAE,EACN,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CACxC,CAAC;;;;;;;;ACRF,yC","file":"main-d369b430a797f62cedc1.js","sourcesContent":["import 'webrtc-adapter';\r\nimport * as React from 'react';\r\nimport * as classnames from 'classnames';\r\nimport { env } from '../config/config';\r\n\r\nimport {\r\n    Conference,\r\n    Connect,\r\n    ConferenceStream,\r\n    Stream,\r\n    IMediaStreamControlRendererProps,\r\n    AudioMeter,\r\n    AudioMonitor,\r\n    IStreamsRendererProps,\r\n    ToggleAudioEnabledHandler,\r\n    ToggleVideoEnabledHandler,\r\n} from 'react-conf-webrtc';\r\nimport { MediaStreamControl } from './MediaStreamControl';\r\n\r\nconst config: RTCConfiguration = {\r\n    'iceServers': [\r\n        { 'urls': 'stun:stun.services.mozilla.com' },\r\n        { 'urls': 'stun:stun.l.google.com:19302' }\r\n    ]\r\n};\r\n\r\nexport class App extends React.Component<{}, {}> {\r\n    constructor() {\r\n        super();\r\n        this.renderConference = this.renderConference.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Conference\r\n                render={this.renderConference}\r\n                connect={connect}\r\n                room='conference/main'\r\n                peerConnectionConfig={config}\r\n                onError={this.onError}\r\n            />\r\n        );\r\n    }\r\n\r\n    private onMuteStream(stream: ConferenceStream, toggleAudio: ToggleAudioEnabledHandler) {\r\n        toggleAudio(stream);\r\n    }\r\n\r\n    private onDisableStream(stream: ConferenceStream, toggleVideo: ToggleVideoEnabledHandler) {\r\n        toggleVideo(stream);\r\n    }\r\n\r\n    private renderRemoteStream(toggleAudioEnabled: ToggleAudioEnabledHandler, toggleVideoEnabled: ToggleVideoEnabledHandler, stream: ConferenceStream) {\r\n        // NOTE(yunsi): Use the first 10 characters as the remote name\r\n        // TODO(yunsi): Find a better way to define remote name\r\n        const name = stream.id.substring(0, 10);\r\n\r\n        return (\r\n            <div className='docs-conf-remote-stream' key={stream.id}>\r\n                <button type='button' onClick={this.onMuteStream.bind(this, stream, toggleAudioEnabled)}>\r\n                    Mute\r\n                </button>\r\n                <button type='button' onClick={this.onDisableStream.bind(this, stream, toggleVideoEnabled)}>\r\n                    Video\r\n                </button>\r\n                <Stream className='docs-conf-remote-stream__stream' stream={stream.stream} />\r\n                <div className={classnames('docs-conf-remote-stream__name', { 'docs-conf-remote-stream__name--is-speaking': stream.isSpeaking })}>\r\n                    {name}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private renderConference(streamProps: IStreamsRendererProps, controlProps: IMediaStreamControlRendererProps): JSX.Element | null | false {\r\n        const { localStream, remoteStreams, audioMonitor } = streamProps;\r\n        const { toggleAudioEnabled, toggleVideoEnabled, toggleLocalScreenShare, toggleRecording } = controlProps;\r\n\r\n        return (\r\n            <div className='docs-conf'>\r\n                {localStream ? (\r\n                    <div className='docs-conf-local-stream'>\r\n                        <Stream mirror={!localStream.isScreenSharing} stream={localStream.stream} muted={true} />\r\n                    </div>\r\n                ) : null}\r\n\r\n                <div className='docs-conf-remote-streams'>\r\n                    {streamProps.remoteStreams.map(this.renderRemoteStream.bind(this, toggleAudioEnabled, toggleVideoEnabled))}\r\n                </div>\r\n\r\n                {localStream ? (\r\n                    <div className='docs-conf-stream-controls'>\r\n                        <AudioMeter audioMonitor={streamProps.audioMonitor} />\r\n                        <MediaStreamControl\r\n                            audioEnabled={localStream.audioEnabled}\r\n                            videoEnabled={localStream.videoEnabled}\r\n                            toggleAudioEnabled={toggleAudioEnabled}\r\n                            toggleVideoEnabled={toggleVideoEnabled}\r\n                            toggleScreenShare={toggleLocalScreenShare}\r\n                            toggleRecording={toggleRecording}\r\n                        />\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private onError(error: any) {\r\n        switch (error) {\r\n            case 'support':\r\n                return console.warn('WebRTC is not supported, use Chrome or Firefox')\r\n            case 'noWebCamPermission':\r\n                return console.warn('No webcam permission')\r\n            case 'noMicPermission':\r\n                return console.warn('No mic permission')\r\n            default:\r\n                return console.trace(error)\r\n        }\r\n    }\r\n}\r\n\r\n// TODO(andrew): Figure out how to make this work with env\r\nfunction connect() {\r\n    const webRTCUrl = env.SPREED_URL ? env.SPREED_URL : location.hostname + \":8443\";\r\n    const conn = Connect('wss://' + webRTCUrl + '/ws');\r\n    conn.onconnmessage = (msg, done) => {\r\n        console.log('Intercepted SpreedResponse message with type: %s', msg.Data.Type);\r\n        done()\r\n    }\r\n    return conn;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/App.tsx","declare var process: any;\r\n\r\nexport interface IEnv {\r\n    FAVICON_URL: string;\r\n    SPREED_URL: string;\r\n}\r\n\r\nexport const env: IEnv = process.env;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/config.ts","export * from './components';\r\nexport * from './data';\r\nexport * from './Spreed';\r\nexport * from './utils';\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/index.ts","export * from './Conference';\r\nexport * from './controls';\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/index.ts","import * as React from 'react';\r\nimport * as DetectRTC from 'detectrtc';\r\nimport 'webrtc-adapter';\r\n\r\nimport {\r\n    ConferenceConnection,\r\n    IConfIncomingMessage,\r\n    IConfMessageSelf,\r\n    IConfIncomingMessageCandidate,\r\n    IConfIncomingMessageOffer,\r\n    IConfIncomingMessageAnswer,\r\n    IConfMessageAddPeer,\r\n    IConfMessageRemovePeer,\r\n    IConfOutgoingMessage,\r\n    ConfUserID,\r\n    IDataChannelMessage,\r\n    IDataChannelMessageSpeech,\r\n    IDataChannelMessageAudio,\r\n    IDataChannelMessageVideo,\r\n    DataChannelReadyState,\r\n    ConferenceError,\r\n} from '../data';\r\nimport {\r\n    createOutgoingMessageJoin,\r\n    createOutgoingMessageCandidate,\r\n    createOutgoingMessageOffer,\r\n    createOutgoingMessageAnswer,\r\n    createOutgoingMessageBye,\r\n    createDataChannelMessageSpeech,\r\n    createDataChannelMessageAudio,\r\n    createDataChannelMessageVideo,\r\n\r\n    createConferenceErrorCreateAnswer,\r\n    createConferenceErrorCreateOffer,\r\n    createConferenceErrorGetUserMedia,\r\n    createConferenceErrorMicPermissions,\r\n    createConferenceErrorSetLocalDescription,\r\n    createConferenceErrorSetRemoteDescription,\r\n    createConferenceErrorWebcamPermissions,\r\n    createConferenceErrorWebRTCNotSupported,\r\n} from '../services';\r\nimport { createAudioMonitor, AudioMonitor } from '../utils/createAudioMonitor';\r\nimport * as MediaStreamUtil from '../utils/MediaStreamUtil';\r\nimport { StreamRecorder } from '../utils/StreamRecorder';\r\nimport { ChromeExtension } from '../utils/ChromeExtensionUtil';\r\nimport { AudioMeter } from './controls/AudioMeter';\r\nimport { Stream } from './controls/Stream';\r\n\r\nexport interface ConferenceStream {\r\n    id: ConfUserID,\r\n    stream: MediaStream,\r\n    local: boolean;\r\n    isSpeaking: boolean;\r\n    audioEnabled: boolean;\r\n    videoEnabled: boolean;\r\n    isScreenSharing: boolean;\r\n}\r\n\r\nexport interface IStreamsRendererProps {\r\n    localStream: ConferenceStream | undefined;\r\n    remoteStreams: ConferenceStream[];\r\n    audioMonitor: AudioMonitor;\r\n}\r\n\r\nexport interface IMediaStreamControlRendererProps {\r\n    toggleAudioEnabled: ToggleAudioEnabledHandler;\r\n    toggleVideoEnabled: ToggleVideoEnabledHandler;\r\n    toggleLocalScreenShare: () => void;\r\n    toggleRecording: () => void;\r\n}\r\n\r\nexport interface ToggleAudioEnabledHandler {\r\n    (stream?: ConferenceStream): void;\r\n}\r\n\r\nexport interface ToggleVideoEnabledHandler {\r\n    (stream?: ConferenceStream): void;\r\n}\r\n\r\nexport interface ConferenceRenderer {\r\n    (streamProps: IStreamsRendererProps, controlProps: IMediaStreamControlRendererProps): JSX.Element | null | false;\r\n}\r\n\r\nexport interface IConferenceProps {\r\n    connect: () => ConferenceConnection;\r\n    room: string;\r\n    peerConnectionConfig: RTCConfiguration;\r\n    render?: ConferenceRenderer;\r\n    onError?: (error: ConferenceError) => void;\r\n}\r\n\r\nconst webcamScreenConstraints = {\r\n    audio: true,\r\n    video: true,\r\n}\r\n\r\n// TODO(yunsi): Add data channel config\r\n// var dataChannelConfig: RTCDataChannelInit = {}\r\n\r\nexport interface IConferenceState {\r\n    localStream: ConferenceStream;\r\n    remoteStreams: { [id: string]: ConferenceStream };\r\n    audioMonitor: AudioMonitor;\r\n}\r\n\r\nexport class Conference extends React.Component<IConferenceProps, IConferenceState> {\r\n    private connection: ConferenceConnection;\r\n    private localId: string | undefined;\r\n    private peerConnections: { [id: string]: RTCPeerConnection } = {};\r\n    private candidates: { [id: string]: RTCIceCandidateInit[] } = {};\r\n    private dataChannels: { [id: string]: RTCDataChannel } = {};\r\n    private localCamStream: MediaStream;\r\n    private renegotiation: { [id: string]: boolean } = {};\r\n    private streamRecorder: StreamRecorder | undefined;\r\n\r\n    constructor(props: IConferenceProps) {\r\n        super(props);\r\n        this.handleIncomingMessage = this.handleIncomingMessage.bind(this);\r\n        this.handleMediaException = this.handleMediaException.bind(this);\r\n        this.renderStream = this.renderStream.bind(this);\r\n        this.onAudioEnabledChange = this.onAudioEnabledChange.bind(this);\r\n        this.onVideoEnabledChange = this.onVideoEnabledChange.bind(this);\r\n        this.toggleAudioEnabled = this.toggleAudioEnabled.bind(this);\r\n        this.toggleVideoEnabled = this.toggleVideoEnabled.bind(this);\r\n        this.renderMediaStreamControlDefault = this.renderMediaStreamControlDefault.bind(this);\r\n        this.renderStreamsDefault = this.renderStreamsDefault.bind(this);\r\n        this.onToggleAudio = this.onToggleAudio.bind(this);\r\n        this.onToggleVideo = this.onToggleVideo.bind(this);\r\n        this.onToggleRecoding = this.onToggleRecoding.bind(this);\r\n        this.onScreenSharing = this.onScreenSharing.bind(this);\r\n        this.onScreenMediaEnded = this.onScreenMediaEnded.bind(this);\r\n\r\n        this.state = {\r\n            localStream: { audioEnabled: true, videoEnabled: true } as ConferenceStream,\r\n            remoteStreams: {},\r\n            audioMonitor: {} as AudioMonitor,\r\n        }\r\n\r\n        if (!this.checkBrowserSupport()) {\r\n            return;\r\n        };\r\n\r\n        this.connection = this.props.connect();\r\n        this.joinRoom(this.props.room);\r\n        this.getUserMedia();\r\n    }\r\n\r\n    public render() {\r\n        const remoteStreams = this.getRemoteConferenceStreams();\r\n        const localStream = this.getLocalConferenceStream();\r\n        const { render } = this.props;\r\n        const { audioMonitor } = this.state;\r\n\r\n        if (localStream) {\r\n            this.changeAudioTrackEnabled(localStream.audioEnabled);\r\n            this.changeVideoTrackEnabled(localStream.videoEnabled);\r\n        }\r\n\r\n        if (render) {\r\n            return render({\r\n                localStream,\r\n                remoteStreams,\r\n                audioMonitor,\r\n            }, {\r\n                    toggleAudioEnabled: this.toggleAudioEnabled,\r\n                    toggleVideoEnabled: this.toggleVideoEnabled,\r\n                    toggleLocalScreenShare: this.onScreenSharing,\r\n                    toggleRecording: this.onToggleRecoding,\r\n                });\r\n        }\r\n\r\n        if (!localStream) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className='rcw-conference'>\r\n                {this.renderStream(localStream)}\r\n                {remoteStreams.map(this.renderStream)}\r\n                {this.renderMediaStreamControlDefault()}\r\n                <AudioMeter audioMonitor={audioMonitor} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        if (this.state.localStream.stream) {\r\n            MediaStreamUtil.stopMediaStream(this.state.localStream.stream);\r\n        }\r\n        this.leaveRoom();\r\n    }\r\n\r\n    // NOTE(andrews): toggleAudioEnabled allows you to control the audio tracks\r\n    // of any stream. If no stream is provided, then it defaults to using the\r\n    // local stream object.\r\n    private toggleAudioEnabled(stream?: ConferenceStream): void {\r\n        if (!stream) {\r\n            stream = this.state.localStream;\r\n        }\r\n        const trackStatus = stream.audioEnabled;\r\n        this.onAudioEnabledChange(stream, !trackStatus);\r\n    }\r\n\r\n    // NOTE(andrews): toggleVideoEnabled allows you to control the videos tracks\r\n    // of any stream. If no stream is provided, then it defaults to using the\r\n    // local stream object.\r\n    private toggleVideoEnabled(stream?: ConferenceStream): void {\r\n        if (!stream) {\r\n            stream = this.state.localStream;\r\n        }\r\n        const trackStatus = stream.videoEnabled;\r\n        this.onVideoEnabledChange(stream, !trackStatus);\r\n    }\r\n\r\n    private onToggleAudio() {\r\n        this.toggleAudioEnabled();\r\n    }\r\n\r\n    private onToggleVideo() {\r\n        this.toggleVideoEnabled();\r\n    }\r\n\r\n    private onScreenSharing(): void {\r\n        this.getScreenMedia();\r\n    }\r\n\r\n    private onToggleRecoding() {\r\n        if (this.streamRecorder) {\r\n            this.streamRecorder.stop();\r\n            this.streamRecorder.download('recoding.webm');\r\n            this.streamRecorder = undefined;\r\n        }\r\n        else {\r\n            if (this.state.localStream && this.state.localStream.stream) {\r\n                this.streamRecorder = new StreamRecorder(this.state.localStream.stream);\r\n                if (this.streamRecorder.canRecord) {\r\n                    this.streamRecorder.start();\r\n                }\r\n                else {\r\n                    console.error('cannot record');\r\n                    this.streamRecorder = undefined;\r\n                }\r\n            }\r\n            else {\r\n                console.error('No local stream for recording');\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderMediaStreamControlDefault(): JSX.Element | null | false {\r\n        return (\r\n            <div className='rcw-conference__media-stream-controls-default'>\r\n                <div className='rcw-stream-controls'>\r\n                    <button className='rcw-stream-control-mute' onClick={this.onToggleAudio}>Mute Audio</button>\r\n                    <button className='rcw-stream-control-disable' onClick={this.onToggleVideo}>Disable Video</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private renderStreamsDefault() {\r\n        const localStream = this.getLocalConferenceStream();\r\n        const remoteStreams = this.getRemoteConferenceStreams();\r\n\r\n        if (!localStream) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className='rcw-conference__streams-default'>\r\n                {this.renderStream(localStream)}\r\n                {remoteStreams.map(this.renderStream)}\r\n                {this.renderMediaStreamControlDefault()}\r\n                <AudioMeter audioMonitor={this.state.audioMonitor} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private checkBrowserSupport(): boolean {\r\n        if (DetectRTC.isWebRTCSupported === false) {\r\n            this.onError(createConferenceErrorWebRTCNotSupported());\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private onError(error: ConferenceError) {\r\n        if (!this.props.onError) {\r\n            return console.warn(error)\r\n        }\r\n        this.props.onError(error);\r\n    }\r\n\r\n    private getLocalConferenceStream(): ConferenceStream | undefined {\r\n        if (!this.state.localStream.stream || !this.state.localStream.id) {\r\n            return;\r\n        }\r\n        return this.state.localStream\r\n    }\r\n\r\n    private getRemoteConferenceStreams(): ConferenceStream[] {\r\n        return Object.keys(this.state.remoteStreams).map<ConferenceStream>((id: string) => {\r\n            return this.state.remoteStreams[id]\r\n        });\r\n    }\r\n\r\n    private changeAudioTrackEnabled(enabled: boolean) {\r\n        const stream = this.state.localStream.stream;\r\n        if (!stream) {\r\n            console.warn('changeAudioTrackEnabled(): No local stream.')\r\n            return;\r\n        }\r\n        const track = stream.getAudioTracks()[0];\r\n        if (!track) {\r\n            console.warn('changeAudioTrackEnabled(): No audio track')\r\n            return\r\n        }\r\n        track.enabled = enabled;\r\n    }\r\n\r\n    private changeVideoTrackEnabled(enabled: boolean) {\r\n        const stream = this.state.localStream.stream;\r\n        if (!stream) {\r\n            console.warn('changeVideoTrackEnabled(): No local stream.')\r\n            return;\r\n        }\r\n        const track = stream.getVideoTracks()[0];\r\n        if (!track) {\r\n            console.warn('changeVideoTrackEnabled(): No video track')\r\n            return\r\n        }\r\n        track.enabled = enabled;\r\n    }\r\n\r\n    private onAudioEnabledChange(stream: ConferenceStream, enabled: boolean) {\r\n        if (stream.id === this.state.localStream.id) {\r\n            this.setState({\r\n                localStream: {\r\n                    ...this.state.localStream,\r\n                    audioEnabled: enabled\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                remoteStreams: {\r\n                    ...this.state.remoteStreams,\r\n                    [stream.id]: {\r\n                        ...this.state.remoteStreams[stream.id],\r\n                        audioEnabled: enabled,\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        const message = createDataChannelMessageAudio(stream.id, enabled);\r\n        this.broadcastDataChannelMessage(message);\r\n    }\r\n\r\n    private onVideoEnabledChange(stream: ConferenceStream, enabled: boolean) {\r\n        if (stream.id === this.state.localStream.id) {\r\n            this.setState({\r\n                localStream: {\r\n                    ...this.state.localStream,\r\n                    videoEnabled: enabled\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                remoteStreams: {\r\n                    ...this.state.remoteStreams,\r\n                    [stream.id]: {\r\n                        ...this.state.remoteStreams[stream.id],\r\n                        videoEnabled: enabled,\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        const message = createDataChannelMessageVideo(stream.id, enabled);\r\n        this.broadcastDataChannelMessage(message);\r\n    }\r\n\r\n    private renderStream(stream: ConferenceStream) {\r\n        let className = 'rcw-remote-stream';\r\n        let muted;\r\n        if (stream.local) {\r\n            className = 'rcw-local-stream';\r\n            muted = true;\r\n        }\r\n\r\n        return (\r\n            <Stream\r\n                key={stream.id}\r\n                className={className}\r\n                stream={stream.stream}\r\n                muted={muted}\r\n            />\r\n        )\r\n    }\r\n\r\n    private sendMessage(message: IConfOutgoingMessage) {\r\n        this.connection.publish(message);\r\n    }\r\n\r\n    private joinRoom(room: string) {\r\n        const message = createOutgoingMessageJoin(room);\r\n        this.sendMessage(message);\r\n    }\r\n\r\n    private leaveRoom() {\r\n        // NOTE(yunsi): Send Bye message to spreed server.\r\n        const message = createOutgoingMessageBye()\r\n        this.sendMessage(message);\r\n\r\n        // NOTE(yunsi): Close the WebSocket connection to spreed server.\r\n        this.connection.close();\r\n\r\n        // NOTE(yunsi): Close all peer connections.\r\n        Object.keys(this.peerConnections).forEach((id: string) => {\r\n            // NOTE(yunsi): This will also close all datachannels created on the peerconnection\r\n            this.peerConnections[id].close();\r\n        })\r\n    }\r\n\r\n    private getUserMedia() {\r\n        // NOTE(yunsi): DetectRTC.load() makes sure that all devices are captured and valid result is set for relevant properties.\r\n        DetectRTC.load(() => {\r\n            if (DetectRTC.isWebsiteHasWebcamPermissions === false) {\r\n                this.onError(createConferenceErrorWebcamPermissions())\r\n            }\r\n            if (DetectRTC.isWebsiteHasMicrophonePermissions === false) {\r\n                this.onError(createConferenceErrorMicPermissions())\r\n            }\r\n        })\r\n\r\n        navigator.mediaDevices.getUserMedia(webcamScreenConstraints)\r\n            .then(stream => {\r\n                this.localCamStream = stream;\r\n                this.setLocalStream(stream, {\r\n                    isScreenSharing: false\r\n                });\r\n            })\r\n            .catch(this.handleMediaException);\r\n    }\r\n\r\n    private getScreenMedia() {\r\n        const screenCaptureConstraints = {\r\n            video: {\r\n                mandatory: {\r\n                    chromeMediaSource: 'desktop',\r\n                    chromeMediaSourceId: '',\r\n                    maxWidth: screen.width > 1920 ? screen.width : 1920,\r\n                    maxHeight: screen.height > 1080 ? screen.height : 1080\r\n                }\r\n            },\r\n            audio: false,\r\n        };\r\n\r\n        ChromeExtension.Instance.getShareScreenId()\r\n            .then(sourceId => {\r\n                screenCaptureConstraints.video.mandatory.chromeMediaSourceId = sourceId;\r\n                return navigator.mediaDevices.getUserMedia(screenCaptureConstraints as any);\r\n            }).then(stream => {\r\n                if (this.localCamStream && this.localCamStream.getAudioTracks().length > 0) {\r\n                    // NOTE(gaolw): Merge the audio track into the screen capture stream.\r\n                    stream.addTrack(this.localCamStream.getAudioTracks()[0]);\r\n                }\r\n\r\n                stream.getVideoTracks()[0].onended = this.onScreenMediaEnded;\r\n                this.setLocalStream(stream, {\r\n                    isScreenSharing: true\r\n                });\r\n\r\n            })\r\n            .catch(this.handleMediaException);;\r\n    }\r\n\r\n    private onScreenMediaEnded(e: any) {\r\n        // NOTE(gaolw): switch back to web cam media.\r\n        this.getUserMedia();\r\n    }\r\n\r\n    private handleMediaException(error: MediaStreamError) {\r\n        // Exception type list: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\r\n        this.onError(createConferenceErrorGetUserMedia(error));\r\n    }\r\n\r\n    private setLocalStream(stream: MediaStream, conferenceStream?: Partial<ConferenceStream>) {\r\n        const oldStream = this.state.localStream ? this.state.localStream.stream : null;\r\n        this.setState({\r\n            localStream: {\r\n                ...this.state.localStream,\r\n                ...conferenceStream,\r\n                stream,\r\n                local: true,\r\n            }\r\n        }, () => {\r\n            this.createAudioMonitor();\r\n        })\r\n\r\n        this.connection.subscribe(this.handleIncomingMessage);\r\n\r\n        if (oldStream !== stream) {\r\n            for (let peerId in this.peerConnections) {\r\n                let peerConnection = this.peerConnections[peerId];\r\n                if (oldStream) {\r\n                    peerConnection.removeStream(oldStream);\r\n                    this.renegotiation[peerId] = true;\r\n                }\r\n                peerConnection.addStream(stream);\r\n            }\r\n        }\r\n    }\r\n\r\n    private createAudioMonitor() {\r\n        if (!this.state.localStream || !this.state.localStream.stream) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.localStream.stream.getAudioTracks().length === 0) {\r\n            return;\r\n        }\r\n\r\n        // NOTE(yunsi): Add an audio monitor to listen to the speaking change of local stream.\r\n        const audioMonitor = createAudioMonitor(this.state.localStream.stream);\r\n        audioMonitor.on('speaking', () => {\r\n            const message = createDataChannelMessageSpeech(true);\r\n            this.broadcastDataChannelMessage(message)\r\n        })\r\n        audioMonitor.on('stopped_speaking', () => {\r\n            const message = createDataChannelMessageSpeech(false);\r\n            this.broadcastDataChannelMessage(message)\r\n        })\r\n        this.setState({ audioMonitor });\r\n    }\r\n\r\n    // NOTE(yunsi): Send the speaking message to all clients through data channels\r\n    private broadcastDataChannelMessage(message: IDataChannelMessage) {\r\n        Object.keys(this.dataChannels).forEach((id: string) => {\r\n            this.sendMessageToDataChannel(message, id)\r\n        });\r\n    }\r\n\r\n    private sendMessageToDataChannel(message: IDataChannelMessage, id: string) {\r\n        const dataChannel = this.getDataChannelById(id);\r\n\r\n        if (!dataChannel) {\r\n            console.log(`Data channel for id ${id} does not exist`);\r\n            return\r\n        }\r\n        if (dataChannel.readyState !== DataChannelReadyState.OPEN) {\r\n            console.log(`Data channel for id ${id} is not ready yet`);\r\n            return\r\n        }\r\n\r\n        dataChannel.send(JSON.stringify(message));\r\n    }\r\n\r\n    private handleIncomingMessage(message: IConfIncomingMessage) {\r\n        switch (message.type) {\r\n            case 'Self':\r\n                return this.handleSelfMessage(message);\r\n            case 'AddPeer':\r\n                return this.handleAddPeerMessage(message);\r\n            case 'RemovePeer':\r\n                return this.handleRemovePeerMessage(message);\r\n            case 'Candidate':\r\n                return this.handleCandidateMessage(message);\r\n            case 'Offer':\r\n                return this.handleOfferMessage(message);\r\n            case 'Answer':\r\n                return this.handleAnswerMessage(message);\r\n            default:\r\n                return console.log('Unkonw message type')\r\n        }\r\n    }\r\n\r\n    private handleSelfMessage(message: IConfMessageSelf) {\r\n        this.setState({ localStream: { ...this.state.localStream, id: message.Id } });\r\n    }\r\n\r\n    // NOTE(yunsi): When received an AddPeer event, conference will create a new PeerConnection and add it to the connection list.\r\n    private handleAddPeerMessage(message: IConfMessageAddPeer) {\r\n        const id = message.Id;\r\n        if (!this.state.localStream.id) {\r\n            console.warn('handleAddPeerMessage(): localId is not set.')\r\n            return\r\n        }\r\n\r\n        if (id === this.state.localStream.id) {\r\n            return;\r\n        }\r\n\r\n        // NOTE(yunsi): Check if a PeerConnection is already established for the given ID.\r\n        if (this.getPeerConnectionById(id)) {\r\n            console.log('PeerConnection is already established for the given ID: ' + id);\r\n            return\r\n        }\r\n        const peerConnection = this.createPeerConnectionById(id);\r\n\r\n        // NOTE(yunsi): When two clients both recieved an AddPeer event with the other client's id,\r\n        // they will do a compare to see who should create and send the offer and dataChannel.\r\n        if (this.state.localStream.id.localeCompare(id) === 1) {\r\n            const dataChannel = peerConnection.createDataChannel('dataChannel');\r\n            this.setDataChannelMessageHandler(dataChannel, id);\r\n            peerConnection.createOffer()\r\n                .then(sessionDescription => this.setLocalAndSendMessage(sessionDescription, 'Offer', id))\r\n                .catch(err => {\r\n                    this.onError(createConferenceErrorCreateOffer(err, id));\r\n                })\r\n        }\r\n    }\r\n\r\n    private setDataChannelMessageHandler(dataChannel: RTCDataChannel, id: string) {\r\n        let oldChannel = this.getDataChannelById(id);\r\n        if (oldChannel) {\r\n            // NOTE(yunsi): Ideally only one side of the RTCPeerConnection should create a data channel, but in case they\r\n            // both create a data channel, we will replace the old channel with the new one.\r\n            console.log(`Replace old dataChannel: ${oldChannel} of id: ${id} with new dataChannel: ${dataChannel}`)\r\n        }\r\n        dataChannel.onmessage = (messageEvent) => { this.handleDataChannelMessage(messageEvent, id) };\r\n        this.dataChannels[id] = dataChannel;\r\n    }\r\n\r\n    private createPeerConnectionById(id: string) {\r\n        const peerConnection = new RTCPeerConnection(this.props.peerConnectionConfig);\r\n        // TODO(yunsi): Add data channel config\r\n        peerConnection.onicecandidate = (event) => {\r\n            this.handleIceCandidate(event, id)\r\n        };\r\n        peerConnection.onaddstream = (event) => {\r\n            this.handleRemoteStreamAdded(event, id)\r\n        };\r\n        peerConnection.onremovestream = (event) => {\r\n            console.log('peerConnection.onremovestream:', event);\r\n        }\r\n        peerConnection.ondatachannel = (event) => {\r\n            this.handleDataChannelReceived(event, id)\r\n        };\r\n        peerConnection.onnegotiationneeded = (event) => {\r\n            // NOTE(gaolw): when negotiation needed, create offer.\r\n            console.log('peerConnection.onnegotiationneeded:', id, this.renegotiation);\r\n            if (this.renegotiation[id]) {\r\n                console.log('peerConnection.onnegotiationneeded:createOffer', peerConnection);\r\n                // NOTE(gaolw): Somehow the onnegotiationneeded will fire twice, so that offer will be created twice which will cause some errors when answering.\r\n                this.renegotiation[id] = false;\r\n                peerConnection.createOffer()\r\n                    .then(sessionDescription => this.setLocalAndSendMessage(sessionDescription, 'Offer', id))\r\n                    .catch(err => {\r\n                        this.onError(createConferenceErrorCreateOffer(err, id));\r\n                    });\r\n            }\r\n        }\r\n\r\n        if (this.state.localStream.stream) {\r\n            peerConnection.addStream(this.state.localStream.stream);\r\n        }\r\n        this.peerConnections[id] = peerConnection;\r\n\r\n        return peerConnection;\r\n    }\r\n\r\n    private handleIceCandidate(event: RTCPeerConnectionIceEvent, id: string) {\r\n        if (event.candidate) {\r\n            const message = createOutgoingMessageCandidate(event.candidate.toJSON(), id);\r\n            this.sendMessage(message);\r\n        }\r\n    }\r\n\r\n    private setLocalAndSendMessage(sessionDescription: RTCSessionDescription, type: string, id: string) {\r\n        const peerConnection = this.getPeerConnectionById(id);\r\n        if (!peerConnection) {\r\n            console.warn('setLocalAndSendMessage(): Missing connection Id: %s');\r\n            return\r\n        }\r\n\r\n        let message;\r\n        if (type === 'Offer') {\r\n            message = createOutgoingMessageOffer(sessionDescription, id);\r\n        } else if (type === 'Answer') {\r\n            message = createOutgoingMessageAnswer(sessionDescription, id);\r\n        }\r\n\r\n        if (message) {\r\n            peerConnection.setLocalDescription(sessionDescription)\r\n                .catch(err => {\r\n                    this.onError(createConferenceErrorSetLocalDescription(err, id))\r\n                })\r\n            this.sendMessage(message);\r\n        }\r\n    }\r\n\r\n    private handleRemoteStreamAdded(event: MediaStreamEvent, id: string) {\r\n        if (event.stream) {\r\n            this.setState({\r\n                remoteStreams: {\r\n                    ...this.state.remoteStreams,\r\n                    [id]: {\r\n                        ...this.state.remoteStreams[id],\r\n                        id: id,\r\n                        stream: event.stream,\r\n                        local: false,\r\n                        audioEnabled: true,\r\n                        videoEnabled: true,\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    private handleDataChannelReceived(event: RTCDataChannelEvent, id: string) {\r\n        if (event.channel) {\r\n            this.setDataChannelMessageHandler(event.channel, id);\r\n        }\r\n    }\r\n\r\n    private handleDataChannelMessage(event: MessageEvent, id: string) {\r\n        if (event.data) {\r\n            const message: IDataChannelMessage = JSON.parse(event.data);\r\n            switch (message.type) {\r\n                case 'Speech':\r\n                    return this.handleSpeechMessage(id, message);\r\n                case 'Audio':\r\n                    return this.handleAudioMessage(id, message);\r\n                case 'Video':\r\n                    return this.handleVideoMessage(id, message);\r\n                default:\r\n                    return console.log('Unkonw data channel message')\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSpeechMessage(id: string, message: IDataChannelMessageSpeech) {\r\n        this.setState({\r\n            remoteStreams: {\r\n                ...this.state.remoteStreams,\r\n                [id]: {\r\n                    ...this.state.remoteStreams[id],\r\n                    isSpeaking: message.isSpeaking\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    private handleAudioMessage(id: string, message: IDataChannelMessageAudio) {\r\n        if (message.id === this.state.localStream.id) {\r\n            this.setState({\r\n                localStream: {\r\n                    ...this.state.localStream,\r\n                    audioEnabled: message.enabled,\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                remoteStreams: {\r\n                    ...this.state.remoteStreams,\r\n                    [id]: {\r\n                        ...this.state.remoteStreams[id],\r\n                        audioEnabled: message.enabled\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    private handleVideoMessage(id: string, message: IDataChannelMessageVideo) {\r\n        if (message.id === this.state.localStream.id) {\r\n            this.setState({\r\n                localStream: {\r\n                    ...this.state.localStream,\r\n                    videoEnabled: message.enabled,\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                remoteStreams: {\r\n                    ...this.state.remoteStreams,\r\n                    [id]: {\r\n                        ...this.state.remoteStreams[id],\r\n                        videoEnabled: message.enabled\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // NOTE(yunsi): When received a RemovePeer event, conference will close that PeerConnection and remove it from the connection list.\r\n    private handleRemovePeerMessage(message: IConfMessageRemovePeer) {\r\n        const id = message.Id;\r\n        const peerConnection = this.getPeerConnectionById(id);\r\n        const dataChannel = this.getDataChannelById(id);\r\n\r\n        if (peerConnection) {\r\n            peerConnection.close();\r\n        } else {\r\n            console.warn('handleRemovePeerMessage(): Missing connection Id: %s', id);\r\n        }\r\n\r\n        if (dataChannel) {\r\n            dataChannel.close();\r\n        } else {\r\n            console.warn('handleRemovePeerMessage(): Missing data channel Id: %s', id);\r\n        }\r\n\r\n        delete this.peerConnections[id];\r\n        delete this.dataChannels[id];\r\n        const remoteStreams = {\r\n            ...this.state.remoteStreams\r\n        }\r\n        delete remoteStreams[id];\r\n        this.setState({\r\n            remoteStreams\r\n        })\r\n    }\r\n\r\n    private handleCandidateMessage(message: IConfIncomingMessageCandidate) {\r\n        const id = message.from;\r\n        const peerConnection = this.getPeerConnectionById(id);\r\n        if (!peerConnection) {\r\n            console.warn('handleCandidateMessage(): Missing connection Id: %s');\r\n            return\r\n        }\r\n\r\n        // NOTE(yunsi): Check if remoteDescription exist before call addIceCandidate, if remoteDescription doesn't exist put candidate information in a queue.\r\n        if (peerConnection.remoteDescription) {\r\n            const rtcIceCandidate = this.createRTCIceCandidate(message.candidate);\r\n            peerConnection.addIceCandidate(rtcIceCandidate);\r\n        } else {\r\n            if (this.candidates[id]) {\r\n                this.candidates[id].push(message.candidate);\r\n            } else {\r\n                this.candidates[id] = [message.candidate];\r\n            }\r\n        }\r\n    }\r\n\r\n    // NOTE(yunsi): Convert the RTCIceCandidate JSON object to an actual RTCIceCandidate object.\r\n    // TODO(yunsi): Find a better solution besides type cast.\r\n    private createRTCIceCandidate(candidate: RTCIceCandidateInit) {\r\n        return new RTCIceCandidate(candidate)\r\n    }\r\n\r\n    // NOTE(yunsi): When received an Offer event, conference will set it as RemoteDescription and create an answer to the offer.\r\n    private handleOfferMessage(message: IConfIncomingMessageOffer) {\r\n        const id = message.from;\r\n        const peerConnection = this.getPeerConnectionById(id);\r\n\r\n        if (!peerConnection) {\r\n            console.warn('handleOfferMessage(): Missing connection Id: %s', id);\r\n            return\r\n        }\r\n\r\n        console.log('handleOfferMessage', peerConnection.getRemoteStreams());\r\n\r\n        const rtcSessionDescription = message.sessionDescription;\r\n        peerConnection\r\n            .setRemoteDescription(rtcSessionDescription)\r\n            .then(() => {\r\n                this.processCandidates(id);\r\n                const promise = peerConnection.createAnswer()\r\n                promise.catch(err => {\r\n                    this.onError(createConferenceErrorCreateAnswer(err, id));\r\n                })\r\n                return promise;\r\n            })\r\n            .then(sessionDescription => this.setLocalAndSendMessage(sessionDescription, 'Answer', id))\r\n        // TODO(yunsi): Add error handling.\r\n    }\r\n\r\n    private handleAnswerMessage(message: IConfIncomingMessageAnswer) {\r\n        const id = message.from;\r\n        const peerConnection = this.getPeerConnectionById(id);\r\n\r\n        if (!peerConnection) {\r\n            console.warn('handleAnswerMessage(): Missing connection Id: %s', id);\r\n            return\r\n        }\r\n\r\n        const rtcSessionDescription = message.sessionDescription;\r\n        peerConnection\r\n            .setRemoteDescription(rtcSessionDescription)\r\n            .then(() => this.processCandidates(id))\r\n            .catch(err => {\r\n                this.onError(createConferenceErrorSetRemoteDescription(err, id));\r\n            })\r\n    }\r\n\r\n    private processCandidates(id: string) {\r\n        const peerConnection = this.getPeerConnectionById(id);\r\n        if (!peerConnection) {\r\n            console.warn('processCandidates(): Missing connection Id: %s', id);\r\n            return\r\n        }\r\n\r\n        if (this.candidates[id]) {\r\n            while (this.candidates[id].length > 0) {\r\n                const candidate = this.candidates[id].shift();\r\n                if (candidate) {\r\n                    const rtcIceCandidate = this.createRTCIceCandidate(candidate);\r\n                    peerConnection.addIceCandidate(rtcIceCandidate);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getPeerConnectionById(id: string): RTCPeerConnection {\r\n        return this.peerConnections[id]\r\n    }\r\n\r\n    private getDataChannelById(id: string): RTCDataChannel {\r\n        return this.dataChannels[id]\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/Conference.tsx","export const DataChannelReadyState = {\r\n    CONNECTING: 'connecting',\r\n    OPEN: 'open',\r\n    CLOSING: 'closing',\r\n    CLOSED: 'closed',\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/data/Const.ts","export type ConferenceError = ConferenceErrorWebcamPermissions |\r\n    ConferenceErrorMicPermissions |\r\n    ConferenceErrorSetLocalDescription |\r\n    ConferenceErrorSetRemoteDescription |\r\n    ConferenceErrorCreateOffer |\r\n    ConferenceErrorCreateAnswer |\r\n    ConferenceErrorWebRTCNotSupported |\r\n    ConferenceErrorGetUserMedia;\r\n\r\nexport interface ConferenceErrorWebcamPermissions {\r\n    type: 'ConferenceErrorWebcamPermissions';\r\n}\r\n\r\nexport interface ConferenceErrorMicPermissions {\r\n    type: 'ConferenceErrorMicPermissions';\r\n}\r\n\r\nexport interface ConferenceErrorSetLocalDescription {\r\n    type: 'ConferenceErrorSetLocalDescription';\r\n    error: any;\r\n    id: string;\r\n}\r\n\r\nexport interface ConferenceErrorSetRemoteDescription {\r\n    type: 'ConferenceErrorSetRemoteDescription';\r\n    error: any;\r\n    id: string;\r\n}\r\n\r\nexport interface ConferenceErrorCreateOffer {\r\n    type: 'ConferenceErrorCreateOffer';\r\n    error: any;\r\n    id: string;\r\n}\r\n\r\nexport interface ConferenceErrorCreateAnswer {\r\n    type: 'ConferenceErrorCreateAnswer';\r\n    error: any;\r\n    id: string;\r\n}\r\n\r\nexport interface ConferenceErrorWebRTCNotSupported {\r\n    type: 'ConferenceErrorWebRTCNotSupported';\r\n}\r\n\r\nexport interface ConferenceErrorGetUserMedia {\r\n    type: 'ConferenceErrorGetUserMedia';\r\n    error: MediaStreamError;\r\n}\r\n\r\nexport const ConferenceError = {\r\n    WebcamPermissions: 'ConferenceErrorWebcamPermissions',\r\n    MicPermissions: 'ConferenceErrorMicPermissions',\r\n    SetLocalDescription: 'ConferenceErrorSetLocalDescription',\r\n    SetRemoteDescription: 'ConferenceErrorSetRemoteDescription',\r\n    CreateOffer: 'ConferenceErrorCreateOffer',\r\n    CreateAnswer: 'ConferenceErrorCreateAnswer',\r\n    WebRTCNotSupported: 'ConferenceErrorWebRTCNotSupported',\r\n    GetUserMedia: 'ConferenceErrorGetUserMedia',\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/data/Error.ts","export * from './ConferenceService';\r\nexport * from './DataChannelService';\r\nexport * from './ErrorService';\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/services/index.ts","import {\r\n    IConfMessageJoin,\r\n    IConfOutgoingMessageCandidate,\r\n    IConfOutgoingMessageOffer,\r\n    IConfOutgoingMessageAnswer,\r\n    IConfMessageBye\r\n} from '../data';\r\n\r\nexport function createOutgoingMessageJoin(room: string): IConfMessageJoin {\r\n    return {\r\n        type: 'Join',\r\n        room: room,\r\n    }\r\n}\r\n\r\nexport function createOutgoingMessageCandidate(candidate: RTCIceCandidateInit, id: string): IConfOutgoingMessageCandidate {\r\n    return {\r\n        type: 'Candidate',\r\n        candidate: candidate,\r\n        to: id,\r\n    }\r\n}\r\n\r\nexport function createOutgoingMessageOffer(sessionDescription: RTCSessionDescription, id: string): IConfOutgoingMessageOffer {\r\n    return {\r\n        type: 'Offer',\r\n        sessionDescription: sessionDescription,\r\n        to: id,\r\n    }\r\n}\r\n\r\nexport function createOutgoingMessageAnswer(sessionDescription: RTCSessionDescription, id: string): IConfOutgoingMessageAnswer {\r\n    return {\r\n        type: 'Answer',\r\n        sessionDescription: sessionDescription,\r\n        to: id,\r\n    }\r\n}\r\n\r\nexport function createOutgoingMessageBye(): IConfMessageBye {\r\n    return {\r\n        type: 'Bye',\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/services/ConferenceService.ts","import {\r\n    IDataChannelMessageSpeech,\r\n    IDataChannelMessageAudio,\r\n    IDataChannelMessageVideo\r\n} from '../data';\r\n\r\nexport function createDataChannelMessageSpeech(isSpeaking: boolean): IDataChannelMessageSpeech {\r\n    return {\r\n        type: 'Speech',\r\n        isSpeaking: isSpeaking,\r\n    }\r\n}\r\n\r\nexport function createDataChannelMessageAudio(id: string, enabled: boolean): IDataChannelMessageAudio {\r\n    return {\r\n        type: 'Audio',\r\n        enabled: enabled,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function createDataChannelMessageVideo(id: string, enabled: boolean): IDataChannelMessageVideo {\r\n    return {\r\n        type: 'Video',\r\n        enabled: enabled,\r\n        id,\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/services/DataChannelService.ts","import * as data from '../data';\r\n\r\nexport function createConferenceErrorWebcamPermissions(): data.ConferenceErrorWebcamPermissions {\r\n    return {\r\n        type: 'ConferenceErrorWebcamPermissions',\r\n    }\r\n}\r\n\r\nexport function createConferenceErrorMicPermissions(): data.ConferenceErrorMicPermissions {\r\n    return {\r\n        type: 'ConferenceErrorMicPermissions',\r\n    }\r\n}\r\n\r\nexport function createConferenceErrorSetLocalDescription(error: any, id: string): data.ConferenceErrorSetLocalDescription {\r\n    return {\r\n        type: 'ConferenceErrorSetLocalDescription',\r\n        error,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function createConferenceErrorSetRemoteDescription(error: any, id: string): data.ConferenceErrorSetRemoteDescription {\r\n    return {\r\n        type: 'ConferenceErrorSetRemoteDescription',\r\n        error,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function createConferenceErrorCreateOffer(error: any, id: string): data.ConferenceErrorCreateOffer {\r\n    return {\r\n        type: 'ConferenceErrorCreateOffer',\r\n        error,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function createConferenceErrorCreateAnswer(error: any, id: string): data.ConferenceErrorCreateAnswer {\r\n    return {\r\n        type: 'ConferenceErrorCreateAnswer',\r\n        error,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function createConferenceErrorWebRTCNotSupported(): data.ConferenceErrorWebRTCNotSupported {\r\n    return {\r\n        type: 'ConferenceErrorWebRTCNotSupported',\r\n    }\r\n}\r\n\r\nexport function createConferenceErrorGetUserMedia(error: any): data.ConferenceErrorGetUserMedia {\r\n    return {\r\n        type: 'ConferenceErrorGetUserMedia',\r\n        error,\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/services/ErrorService.ts","import { DownloadUtil } from './DownloadUtil';\r\n\r\ndeclare var MediaRecorder: any;\r\n\r\nconst CollectFrequency = 10; // 10MS;\r\nconst DelayRevokeDownloadUrl = 100; // 100MS\r\n\r\nexport class StreamRecorder {\r\n    private recordBlobs: any[] = [];\r\n    private mediaRecoder: any;\r\n\r\n    constructor(mediaStream: MediaStream) {\r\n        this.onStopped = this.onStopped.bind(this);\r\n        this.onDataAvailable = this.onDataAvailable.bind(this);\r\n\r\n        this.createRecorder(mediaStream);\r\n    }\r\n\r\n    public canRecord() {\r\n        return !!this.mediaRecoder;\r\n    }\r\n\r\n    public start() {\r\n        if (this.mediaRecoder) {\r\n            this.mediaRecoder.start(CollectFrequency);\r\n        }\r\n    }\r\n\r\n    public stop() {\r\n        if (this.mediaRecoder) {\r\n            this.mediaRecoder.stop();\r\n        }\r\n    }\r\n\r\n    public download(filename: string) {\r\n        const blob = new Blob(this.recordBlobs, { type: 'video/webm' });\r\n        const url = window.URL.createObjectURL(blob);\r\n\r\n        DownloadUtil.download(url, filename);\r\n        setTimeout(function () {\r\n            window.URL.revokeObjectURL(url);\r\n        }, DelayRevokeDownloadUrl);\r\n    }\r\n\r\n    private createRecorder(mediaStream: MediaStream) {\r\n        try {\r\n            this.mediaRecoder = new MediaRecorder(mediaStream, this.getRecorderOptions());\r\n            this.mediaRecoder.onstop = this.onStopped;\r\n            this.mediaRecoder.ondataavailable = this.onDataAvailable;\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    private onStopped() {\r\n        console.log('media recorder stopped');\r\n    }\r\n\r\n    private onDataAvailable(event: any) {\r\n        if (event.data && event.data.size > 0) {\r\n            this.recordBlobs.push(event.data);\r\n        }\r\n    }\r\n\r\n    private getRecorderOptions() {\r\n        let options = { mimeType: 'video/webm;codecs=vp9' };\r\n        if (!MediaRecorder.isTypeSupported(options.mimeType)) {\r\n            options = { mimeType: 'video/webm;codecs=vp8' };\r\n            if (!MediaRecorder.isTypeSupported(options.mimeType)) {\r\n                options = { mimeType: 'video/webm' };\r\n                if (!MediaRecorder.isTypeSupported(options.mimeType)) {\r\n                    options = { mimeType: '' };\r\n                }\r\n            }\r\n        }\r\n\r\n        return options;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/utils/StreamRecorder.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// vertx (ignored)\n// module id = 228\n// module chunks = 0","export const types: { [string: string]: string } = {\r\n    extLoaded: 'teamious-screen-capture-ext-loaded',\r\n    getScreenSourceId: 'teamious-screen-capture-get-source-id'\r\n}\r\n\r\nexport const actions = {\r\n    call: 'teamious-screen-capture-call',\r\n    answer: 'teamious-screen-capture-answer'\r\n}\r\n\r\nexport const errors = {\r\n    screenPermissionDeied: 'screenPermissionDeied'\r\n}\r\n\r\nexport interface IMessage {\r\n    id: string | number;\r\n    action: string,\r\n    type: string,\r\n    data?: Object,\r\n    error?: string\r\n}\r\n\r\nexport function isWellKnownMessage(message: IMessage): boolean {\r\n    if (!message) {\r\n        return false;\r\n    }\r\n\r\n    for (var type in types) {\r\n        if (types[type] === message.type) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../screen-capture-chrome-extension/src/message.ts","export * from './Stream';\r\nexport * from './AudioMeter';\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/controls/index.ts","export * from './Connect';\r\nexport * from './SpreedAdapter';\r\nexport * from './SpreedAPI';\r\nexport * from './SpreedConnection';\r\nexport * from './SpreedMessage';\r\nexport * from './SpreedRequest';\r\nexport * from './SpreedResponse';\r\nexport * from './TranslateConferenceMessage';\r\nexport * from './TranslateSpreedMessage';\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/Spreed/index.ts","import { ConferenceConnection, ConferenceConnectionSubscriber } from '../data/ConferenceConnection';\r\nimport { IConfIncomingMessage, IConfOutgoingMessage } from '../data/ConferenceMessage';\r\nimport { SpreedConnection } from './SpreedConnection';\r\nimport { SpreedAdapter } from './SpreedAdapter';\r\nimport { SpreedResponse } from '../Spreed';\r\n\r\nexport function Connect(url: string): Connection {\r\n    return new Connection(url);\r\n}\r\n\r\n// NOTE(andrews): Connection class is responsible for controlling the communication\r\n// between the SpreedConnection and SpreedAdapter instances. It exposes an API\r\n// for subscribers to hook into the SpreedConnection event stream. This means\r\n// that anytime the SpreedServer sends a message to the SpreedConnection, you\r\n// can be notified.\r\nexport class Connection implements ConferenceConnection {\r\n    private conn: SpreedConnection;\r\n    private adapter: SpreedAdapter;\r\n    private onConnMessageHandler?: SpreedConnectionMessageHandler;\r\n\r\n    constructor(url: string) {\r\n        this.conn = new SpreedConnection(url);\r\n        this.adapter = new SpreedAdapter();\r\n        this.conn.onmessage = (msg) => {\r\n            if (this.onConnMessageHandler) {\r\n                this.onConnMessageHandler(msg, () => {\r\n                    this.adapter.handleSpreedMessage(msg);\r\n                })\r\n                return\r\n            }\r\n            this.adapter.handleSpreedMessage(msg);\r\n        }\r\n        this.adapter.onSpreedMessage = (msg) => {\r\n            this.conn.send(msg);\r\n        }\r\n    }\r\n\r\n    // NOTE(andrews): Use this API if you want to subscribe to the incoming event\r\n    // stream from the SpreedConnection class. Note that done() must be called\r\n    // by your handler if you want the message to continue through to the\r\n    // connection.\r\n    set onconnmessage(handler: SpreedConnectionMessageHandler) {\r\n        this.onConnMessageHandler = handler;\r\n    }\r\n\r\n    public subscribe(handler: ConferenceConnectionSubscriber) {\r\n        this.adapter.onConferenceMessage = (msg) => {\r\n            handler(msg);\r\n        }\r\n    }\r\n\r\n    public publish(msg: IConfOutgoingMessage) {\r\n        this.adapter.handleConferenceMessage(msg);\r\n    }\r\n\r\n    public close() {\r\n        this.conn.close()\r\n    }\r\n}\r\n\r\nexport interface SpreedConnectionMessageHandler {\r\n    (message: SpreedResponse, done: () => void): void\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/Spreed/Connect.ts","export * from './createAudioMonitor';\r\nexport * from './MediaStreamUtil';\r\nexport * from './ChromeExtensionUtil';\r\nexport * from './DownloadUtil';\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/utils/index.ts","import * as React from 'react';\r\nimport { ConferenceStream, ChromeExtension, DownloadUtil } from 'react-conf-webrtc';\r\n\r\ninterface IMediaStreamControlProps {\r\n    audioEnabled: boolean;\r\n    videoEnabled: boolean;\r\n    toggleAudioEnabled: (stream?: ConferenceStream) => void;\r\n    toggleVideoEnabled: (stream?: ConferenceStream) => void;\r\n    toggleScreenShare?: () => void;\r\n    toggleRecording?: () => void;\r\n}\r\n\r\nexport class MediaStreamControl extends React.Component<IMediaStreamControlProps, {}> {\r\n\r\n    constructor() {\r\n        super()\r\n        this.onToggleAudioEnabled = this.onToggleAudioEnabled.bind(this);\r\n        this.onToggleVideoEnabled = this.onToggleVideoEnabled.bind(this);\r\n        this.onToggleScreenShare = this.onToggleScreenShare.bind(this);\r\n        this.onToggleRecording = this.onToggleRecording.bind(this);\r\n    }\r\n\r\n    private onToggleAudioEnabled() {\r\n        this.props.toggleAudioEnabled();\r\n    }\r\n\r\n    private onToggleVideoEnabled() {\r\n        this.props.toggleVideoEnabled();\r\n    }\r\n\r\n    private onToggleScreenShare() {\r\n        ChromeExtension.Instance.isExtensionAvailable()\r\n            .then(available => {\r\n                if (available) {\r\n                    if (this.props.toggleScreenShare) {\r\n                        this.props.toggleScreenShare();\r\n                    }\r\n                }\r\n                else {\r\n                    DownloadUtil.download('https://github.com/teamious/react-conf-webrtc/raw/master/docs/ext/teamious.screen.chrome.crx');\r\n                }\r\n            })\r\n    }\r\n\r\n    private onToggleRecording() {\r\n        if (this.props.toggleRecording) {\r\n            this.props.toggleRecording();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const muteText = this.props.audioEnabled ? 'Mute Audio' : 'Unmute Audio';\r\n        const disableText = this.props.videoEnabled ? 'Disable Video' : 'Enable Video';\r\n        const shareText = this.props.videoEnabled ? 'Share Screen' : 'Stop';\r\n        const recodingText = 'Record';\r\n        return (\r\n            <div className='rcw-stream-controls'>\r\n                <button className='rcw-stream-control-mute' onClick={this.onToggleAudioEnabled}>{muteText}</button>\r\n\r\n                <button className='rcw-stream-control-disable' onClick={this.onToggleVideoEnabled}>{disableText}</button>\r\n\r\n                {\r\n                    this.props.toggleScreenShare && ChromeExtension.Instance.isChrome() &&\r\n                    <button className='rcw-stream-control-share' onClick={this.onToggleScreenShare}>{shareText}</button>\r\n                }\r\n                {\r\n                    this.props.toggleRecording &&\r\n                    <button className='rcw-stream-control-recoding' onClick={this.onToggleRecording}>{recodingText}</button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/MediaStreamControl.tsx","export * from './src';\r\n\n\n\n// WEBPACK FOOTER //\n// ../index.ts","export * from './ConferenceMessage';\r\nexport * from './ConferenceConnection';\r\nexport * from './DataChannelMessage';\r\nexport * from './Const';\r\nexport * from './Error';\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/data/index.ts","import * as Hark from 'hark';\r\n\r\nexport function createAudioMonitor(stream: MediaStream): AudioMonitor {\r\n    return new AudioMonitor(stream);\r\n}\r\n\r\nexport class AudioMonitor {\r\n    private monitor: any;\r\n\r\n    constructor(stream: MediaStream) {\r\n        this.monitor = Hark(stream);\r\n    }\r\n\r\n    public on(event: string, handler: AudioMonitorMessageHandler) {\r\n        this.monitor.on(event, (msg: any) => handler(msg));\r\n    }\r\n\r\n    public stop() {\r\n        this.monitor.stop();\r\n    }\r\n}\r\n\r\nexport interface AudioMonitorMessageHandler {\r\n    (msg: any): void;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/utils/createAudioMonitor.ts","export function stopMediaStream(stream: MediaStream) {\r\n    stream.getAudioTracks().forEach(function (track) {\r\n        track.stop();\r\n    });\r\n\r\n    stream.getVideoTracks().forEach(function (track) {\r\n        track.stop();\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/utils/MediaStreamUtil.ts","export class DownloadUtil {\r\n    public static download(url: string, filename?: string) {\r\n        // Construct the a element\r\n        var link = document.createElement(\"a\");\r\n        link.target = \"_blank\";\r\n\r\n        // Construct the uri\r\n        link.href = url;\r\n        if (filename) {\r\n            link.download = filename;\r\n        }\r\n\r\n        document.body.appendChild(link);\r\n        link.click();\r\n\r\n        // Cleanup the DOM\r\n        document.body.removeChild(link);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/utils/DownloadUtil.ts","import { Promise } from 'es6-promise';\r\nimport * as broswer from 'bowser';\r\nimport * as Message from '../../screen-capture-chrome-extension/src/message';\r\n\r\nconst IsExtensionAvailableTimeout = 1000; // 1000 MS\r\n\r\nexport class ChromeExtension {\r\n    private callbackRegistry: { [id: string]: { resolve: (value?: any) => void, reject: (error: any) => void } } = {};\r\n    private count: number = 0;\r\n\r\n    public static Instance = new ChromeExtension();\r\n\r\n    private constructor() {\r\n        this.onMessage = this.onMessage.bind(this);\r\n        window.addEventListener('message', this.onMessage);\r\n    }\r\n\r\n    public isChrome() {\r\n        return broswer.chrome;\r\n    }\r\n\r\n    public isExtensionAvailable(): Promise<boolean> {\r\n        const { msg, promise } = this.call(Message.types.extLoaded);\r\n        window.setTimeout(() => {\r\n            const handler = this.callbackRegistry[msg.id];\r\n            if (handler) {\r\n                delete this.callbackRegistry[msg.id];\r\n                handler.resolve(false);\r\n            }\r\n        }, IsExtensionAvailableTimeout)\r\n        return promise;\r\n    }\r\n\r\n    public getShareScreenId(): Promise<string> {\r\n        const { msg, promise } = this.call(Message.types.getScreenSourceId);\r\n        return promise;\r\n    }\r\n\r\n    public dispose() {\r\n        window.removeEventListener('message', this.onMessage);\r\n    }\r\n\r\n    private call(type: string, data?: any) {\r\n        const msg: Message.IMessage = {\r\n            type,\r\n            data,\r\n            action: Message.actions.call,\r\n            id: this.count++\r\n        }\r\n\r\n        const promise = new Promise((resolve: (value?: any) => void, reject: (error: any) => void) => {\r\n            this.callbackRegistry[msg.id] = { resolve, reject };\r\n            window.postMessage(msg, '*');\r\n        });\r\n\r\n        return {\r\n            msg,\r\n            promise\r\n        };\r\n    }\r\n\r\n    private onMessage(event: any) {\r\n        if (event.origin != window.location.origin) {\r\n            return;\r\n        }\r\n\r\n        const msg: Message.IMessage = event.data;\r\n        if (!Message.isWellKnownMessage(msg)) {\r\n            // Unknown message\r\n            return;\r\n        }\r\n\r\n        if (msg.action === Message.actions.call) {\r\n            // Ignore call message.\r\n            return;\r\n        }\r\n        else if (msg.action === Message.actions.answer) {\r\n            this.handleMsg(msg);\r\n        }\r\n        else {\r\n            console.log('unknown message', msg);\r\n        }\r\n    }\r\n\r\n    private handleMsg(msg: Message.IMessage) {\r\n        const handler = this.callbackRegistry[msg.id];\r\n        if (!handler) {\r\n            return;\r\n        }\r\n\r\n        delete this.callbackRegistry[msg.id];\r\n\r\n        switch (msg.type) {\r\n            case Message.types.extLoaded:\r\n                handler.resolve(true);\r\n                break;\r\n            case Message.types.getScreenSourceId:\r\n                if (msg.error) {\r\n                    handler.reject(msg.error);\r\n                }\r\n                else {\r\n                    handler.resolve(msg.data);\r\n                }\r\n                break;\r\n            default:\r\n                console.warn('unknown message', msg);\r\n                break;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/utils/ChromeExtensionUtil.ts","import * as React from 'react';\r\n\r\nimport { AudioMonitor } from '../../utils/createAudioMonitor';\r\n\r\nexport interface IAudioMeterProps {\r\n    audioMonitor: AudioMonitor;\r\n};\r\n\r\nexport class AudioMeter extends React.PureComponent<IAudioMeterProps, {}> {\r\n    private audioMeterBar: HTMLDivElement;\r\n    private audioMonitor: AudioMonitor;\r\n\r\n    constructor(props: IAudioMeterProps) {\r\n        super(props);\r\n\r\n        this.refBar = this.refBar.bind(this);\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.audioMonitor = this.props.audioMonitor;\r\n\r\n        this.audioMonitor.on('volume_change', (volume: number) => {\r\n            if (this.audioMeterBar) {\r\n                // NOTE(yunsi): volume ranges from -100dB to 0dB, We need to convert it to float value.\r\n                // TODO(yunsi): Find a better way to render audioMeterBar instead of operating on UI element directly.\r\n                const audioLinearValue = Math.pow(10, (volume / 20));\r\n                this.audioMeterBar.style.width = 100 * audioLinearValue + '%';\r\n            }\r\n        })\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this.audioMonitor.stop();\r\n    }\r\n\r\n    public refBar(element: HTMLDivElement) {\r\n        this.audioMeterBar = element;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className='rcw-audio-meter'>\r\n                <div className='rcw-audio-meter__bar' ref={this.refBar} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/controls/AudioMeter.tsx","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\n\r\nexport interface IStreamProps {\r\n    stream: MediaStream;\r\n    className?: string;\r\n    muted?: boolean;\r\n    onClick?: () => void;\r\n    mirror?: boolean;\r\n    // TODO(yunsi): Need to figure out if we want\r\n    // 1: each client get their own audioActivityLevel and send to other clients through RTCDataChannel.\r\n    // or 2: each client get the remote clients' audioActivityLevel from the remote stream.\r\n    // audioActivityLevel?: number;\r\n};\r\n\r\nconst mirrorStyle = {\r\n    transform: 'rotateY(180deg)',\r\n}\r\n\r\nexport class Stream extends React.PureComponent<IStreamProps, {}> {\r\n    private videoElement: HTMLVideoElement;\r\n\r\n    constructor(props: IStreamProps) {\r\n        super(props);\r\n        this.refVideo = this.refVideo.bind(this);\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.videoElement.srcObject = this.props.stream;\r\n    }\r\n\r\n    public componentDidUpdate(nextProps: IStreamProps) {\r\n        if (nextProps.stream !== this.props.stream) {\r\n            // NOTE(denggl): Not running here now.\r\n            // But in future, maybe it will switch the stream and reload the video.\r\n            this.videoElement.srcObject = this.props.stream;\r\n        }\r\n    }\r\n\r\n    private refVideo(element: HTMLVideoElement) {\r\n        this.videoElement = element;\r\n    }\r\n\r\n    public render() {\r\n        const { className, muted, onClick, mirror } = this.props;\r\n\r\n        return (\r\n            <div className={classnames(this.props.className, 'rcw-stream')} onClick={onClick}>\r\n                <video\r\n                    style={mirror ? mirrorStyle : undefined}\r\n                    className='rcw-stream-video'\r\n                    ref={this.refVideo}\r\n                    autoPlay={true}\r\n                    muted={muted}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/controls/Stream.tsx","import { SpreedResponse } from './SpreedResponse';\r\nimport { SpreedRequest } from './SpreedRequest';\r\n\r\n// NOTE(andrews): SpreedConnection is a wrapper around the WebSocket connection.\r\n// It will queue any responses (messages from the server) and requests (messages from the client)\r\n// if no receiver is ready. Messages from the server are processed once an `onmessage` handler is assigned.\r\n// Likewise, messages from the client are only processed once the WebSocket connection is open.\r\nexport class SpreedConnection {\r\n    private conn: WebSocket;\r\n    private onCloseHandler: SpreedConnCloseHandler;\r\n    private onErrorHandler: SpreedConnErrorHandler;\r\n    private onMessageHandler: SpreedResponseHandler;\r\n    // queue of server -> client messages\r\n    private responses: SpreedResponse[] = [];\r\n    // queue of client -> server messages\r\n    private requests: SpreedRequest[] = [];\r\n\r\n    constructor(url: string) {\r\n        this.conn = new WebSocket(url);\r\n        this.conn.onmessage = this.onConnMessage.bind(this);\r\n        this.conn.onclose = this.onConnClose.bind(this);\r\n        this.conn.onerror = this.onConnError.bind(this);\r\n        this.conn.onopen = this.onConnOpen.bind(this);\r\n    }\r\n\r\n    private onConnOpen() {\r\n        this.processRequests();\r\n    }\r\n\r\n    private processResponses() {\r\n        while (this.responses.length > 0) {\r\n            const res = this.responses.shift();\r\n            if (res) {\r\n                this.onMessageHandler(res);\r\n            }\r\n        }\r\n    }\r\n\r\n    private processRequests() {\r\n        while (this.requests.length > 0) {\r\n            const req = this.requests.shift();\r\n            if (req) {\r\n                this.send(req);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onConnError(event: Event) {\r\n        if (this.onErrorHandler) {\r\n            this.onErrorHandler(event);\r\n        }\r\n    }\r\n\r\n    private onConnClose(event: CloseEvent) {\r\n        if (this.onCloseHandler) {\r\n            this.onCloseHandler(event);\r\n        }\r\n    }\r\n\r\n    // NOTE(andrews): send is used to send messages to the WebSocket connection.\r\n    // It expects that any message being is a SpreedRequest type. If the connection\r\n    // is not open, this function will queue the requests in the this.requests array.\r\n    public send(message: SpreedRequest) {\r\n        if (this.hasOpenConnection()) {\r\n            this.conn.send(JSON.stringify(message));\r\n            return\r\n        }\r\n        this.requests.push(message);\r\n    }\r\n\r\n    public close() {\r\n        this.conn.close()\r\n    }\r\n\r\n    private hasOpenConnection(): boolean {\r\n        return this.conn.readyState === this.conn.OPEN;\r\n    }\r\n\r\n    // NOTE(andrews): onConnMessage is called whenever the WebSocket connection\r\n    // receives a MessageEvent. It parses the message from the server and\r\n    // sends it to the function assigned via the onmessage setter. If no\r\n    // function has been set, it will queue the message in the this.responses array.\r\n    private onConnMessage(event: MessageEvent) {\r\n        const message: SpreedResponse = JSON.parse(event.data);\r\n        if (this.onMessageHandler) {\r\n            this.onMessageHandler(message);\r\n            return\r\n        }\r\n        this.responses.push(message);\r\n    }\r\n\r\n    // NOTE(andrews): onmessage is a setter for the class that you can use to subscribe\r\n    // to any messages that the connection received. If there are any queued messages, they\r\n    // will be processed immediately.\r\n    set onmessage(handler: SpreedResponseHandler) {\r\n        this.onMessageHandler = handler;\r\n        this.processResponses();\r\n    }\r\n\r\n    set onclose(handler: SpreedConnCloseHandler) {\r\n        this.onCloseHandler = handler;\r\n    }\r\n\r\n    set onerror(handler: SpreedConnErrorHandler) {\r\n        this.onErrorHandler = handler;\r\n    }\r\n}\r\n\r\nexport interface SpreedResponseHandler {\r\n    (message: SpreedResponse): void;\r\n}\r\n\r\nexport interface SpreedConnCloseHandler {\r\n    (event: CloseEvent): any;\r\n}\r\n\r\nexport interface SpreedConnErrorHandler {\r\n    (event: Event): any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/Spreed/SpreedConnection.ts","import { SpreedRequest } from './SpreedRequest';\r\nimport { SpreedResponse } from './SpreedResponse';\r\nimport {\r\n    IConfOutgoingMessage,\r\n    IConfIncomingMessage,\r\n} from '../data/ConferenceMessage'\r\nimport { TranslateSpreedMessage } from './TranslateSpreedMessage';\r\nimport { TranslateConferenceMessage } from './TranslateConferenceMessage';\r\n\r\n// NOTE(andrews): SpreedAdapter is responsible for turning SpreedMessages into Conference messages\r\n// and vice-versa. If either receiving end has no receiver, it will queue the messages.\r\nexport class SpreedAdapter {\r\n    private conferenceMessageHandler?: AdapterHandlerConferenceMessage;\r\n    private spreedMessageHandler?: AdapterHandlerSpreedMessage;\r\n    private conferenceMessages: IConfIncomingMessage[] = [];\r\n    private spreedMessages: SpreedRequest[] = []\r\n\r\n    // NOTE(andrews): handleSpreedMessage should be called whenever you want to translate a message from spreed -> conference.\r\n    // Not all message types will be handled\r\n    public handleSpreedMessage(message: SpreedResponse): void {\r\n        const msg = TranslateSpreedMessage(message);\r\n        if (!msg) {\r\n            console.log('handleSpreedMessage(): No translation was found for SpreedResponse type: %s', message.Data.Type);\r\n            return;\r\n        }\r\n        if (msg instanceof Array) {\r\n            msg.forEach(m => {\r\n                this.sendConferenceMessage(m);\r\n            });\r\n            return\r\n        }\r\n        this.sendConferenceMessage(msg);\r\n    }\r\n\r\n    // NOTE(andrews): handleConferenceMessage should be called whenever you want to translate a message from conference -> spreed.\r\n    public handleConferenceMessage(message: IConfOutgoingMessage): void {\r\n        const msg = TranslateConferenceMessage(message);\r\n        if (!msg) {\r\n            console.log('handleConferenceMessage(): No translation was found for IConfOutgoingMessage type: %s', message.type);\r\n            return\r\n        }\r\n        this.sendSpreedMessage(msg);\r\n    }\r\n\r\n    // NOTE(andrews): onConferenceMessage is used to notify your handler when a conference message is available.\r\n    set onConferenceMessage(handler: AdapterHandlerConferenceMessage) {\r\n        this.conferenceMessageHandler = handler;\r\n        this.processConferenceMessages();\r\n    }\r\n\r\n    // NOTE(andrews): onSpreedMessage is used to notify your handler when a spreed message is available.\r\n    set onSpreedMessage(handler: AdapterHandlerSpreedMessage) {\r\n        this.spreedMessageHandler = handler;\r\n        this.processSpreedMessages();\r\n    }\r\n\r\n    // NOTE(andrews): processConferenceMessages will process all of the queued conference messages.\r\n    // If no handler is defined this function will return before attempting to process the queue.\r\n    private processConferenceMessages() {\r\n        if (!this.conferenceMessageHandler) {\r\n            return;\r\n        }\r\n        while (this.conferenceMessages.length > 0) {\r\n            const message = this.conferenceMessages.shift();\r\n            if (!message) {\r\n                console.warn('processConferenceMessages(): undefined message in queue');\r\n                continue\r\n            }\r\n            this.conferenceMessageHandler(message);\r\n        }\r\n    }\r\n\r\n    // NOTE(andrews): processSpreedMessages will process all of the queued spreed messages.\r\n    // If no handler is defined this function will return before attempting to process the queue.\r\n    private processSpreedMessages() {\r\n        if (!this.spreedMessageHandler) {\r\n            return;\r\n        }\r\n        while (this.spreedMessages.length > 0) {\r\n            const message = this.spreedMessages.shift();\r\n            if (!message) {\r\n                console.warn('processSpreedMessages(): undefined message in queue');\r\n                continue\r\n            }\r\n            this.spreedMessageHandler(message);\r\n        }\r\n    }\r\n\r\n    // NOTE(andrews): sendConferenceMessage is used to send a conference message to the handler. If no handler\r\n    // is defined the message will be queued.\r\n    private sendConferenceMessage(message: IConfIncomingMessage) {\r\n        if (this.conferenceMessageHandler) {\r\n            this.conferenceMessageHandler(message);\r\n            return\r\n        }\r\n        this.conferenceMessages.push(message);\r\n    }\r\n\r\n    // NOTE(andrews): sendSpreedMessage is used to send a conference message to the handler. If no handler\r\n    // is defined the message will be queued.\r\n    private sendSpreedMessage(message: SpreedRequest) {\r\n        if (this.spreedMessageHandler) {\r\n            this.spreedMessageHandler(message);\r\n            return\r\n        }\r\n        this.spreedMessages.push(message);\r\n    }\r\n}\r\n\r\nexport interface AdapterHandlerConferenceMessage {\r\n    (message: IConfIncomingMessage): void;\r\n}\r\n\r\nexport interface AdapterHandlerSpreedMessage {\r\n    (message: SpreedRequest): void;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/Spreed/SpreedAdapter.ts","import { SpreedResponse } from './SpreedResponse';\r\nimport {\r\n    IConfIncomingMessage,\r\n    IConfIncomingMessageOffer,\r\n    IConfIncomingMessageAnswer,\r\n    IConfIncomingMessageCandidate,\r\n    IConfMessageAddPeer,\r\n    IConfMessageRemovePeer,\r\n    IConfMessageSelf,\r\n} from '../data/ConferenceMessage'\r\nimport {\r\n    SpreedMessageOffer,\r\n    SpreedMessageAnswer,\r\n    SpreedMessageCandidate,\r\n    SpreedMessageJoined,\r\n    SpreedMessageLeft,\r\n    SpreedMessageWelcome,\r\n    SpreedMessageSelf,\r\n    SpreedMessageConference,\r\n} from './SpreedMessage';\r\n\r\n// NOTE(andrews): TranslateSpreedMessage delegates the work of translating the message\r\n// to individual functions based on the message type. Not all message types need to be translated\r\n// into an IConfIncomingMessage. In such cases, this function will return undefined.\r\n// Note that some spreed messages may translate to an array of Conference messages.\r\nexport function TranslateSpreedMessage(message: SpreedResponse): IConfIncomingMessage[] | IConfIncomingMessage | undefined {\r\n    switch (message.Data.Type) {\r\n        case 'Offer':\r\n            return translateOfferMessage(message.Data, message)\r\n        case 'Answer':\r\n            return translateAnswerMessage(message.Data, message);\r\n        case 'Candidate':\r\n            return translateCandidateMessage(message.Data, message);\r\n        case 'Joined':\r\n            return translateJoinedMessage(message.Data, message);\r\n        case 'Left':\r\n            return translateLeftMessage(message.Data, message);\r\n        case 'Welcome':\r\n            return translateWelcomeMessage(message.Data, message);\r\n        case 'Self':\r\n            return translateSelfMessage(message.Data, message);\r\n        case 'Conference':\r\n            return translateConferenceMessage(message.Data, message);\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\nfunction translateWelcomeMessage(data: SpreedMessageWelcome, message: SpreedResponse): IConfMessageAddPeer[] | undefined {\r\n    return data.Users.map<IConfMessageAddPeer>(u => {\r\n        return {\r\n            type: 'AddPeer',\r\n            Id: u.Id,\r\n        }\r\n    });\r\n}\r\n\r\nfunction translateConferenceMessage(data: SpreedMessageConference, message: SpreedResponse): IConfMessageAddPeer[] | undefined {\r\n    return data.Conference.map<IConfMessageAddPeer>(Id => {\r\n        return {\r\n            type: 'AddPeer',\r\n            Id,\r\n        }\r\n    })\r\n}\r\n\r\nfunction translateSelfMessage(data: SpreedMessageSelf, message: SpreedResponse): IConfMessageSelf | undefined {\r\n    return {\r\n        type: 'Self',\r\n        Id: data.Id,\r\n    }\r\n}\r\n\r\nfunction translateLeftMessage(data: SpreedMessageLeft, message: SpreedResponse): IConfMessageRemovePeer | undefined {\r\n    return {\r\n        type: 'RemovePeer',\r\n        Id: data.Id,\r\n    }\r\n}\r\n\r\nfunction translateJoinedMessage(data: SpreedMessageJoined, message: SpreedResponse): IConfMessageAddPeer | undefined {\r\n    return {\r\n        type: 'AddPeer',\r\n        Id: data.Id,\r\n    }\r\n}\r\n\r\nfunction translateCandidateMessage(data: SpreedMessageCandidate, message: SpreedResponse): IConfIncomingMessageCandidate | undefined {\r\n    if (!message.From) {\r\n        console.warn('translateCandidateMessage(): Failed to translate \"Candidate\" message. \"From\" member not found.')\r\n        return;\r\n    }\r\n    return {\r\n        type: 'Candidate',\r\n        candidate: data.Candidate,\r\n        from: message.From,\r\n    }\r\n}\r\n\r\nfunction translateAnswerMessage(data: SpreedMessageAnswer, message: SpreedResponse): IConfIncomingMessageAnswer | undefined {\r\n    if (!message.From) {\r\n        console.warn('translateAnswerMessage(): Failed to translate \"Answer\" message. \"From\" member not found.')\r\n        return;\r\n    }\r\n    return {\r\n        type: 'Answer',\r\n        sessionDescription: data.Answer,\r\n        from: message.From,\r\n    }\r\n}\r\n\r\nfunction translateOfferMessage(data: SpreedMessageOffer, message: SpreedResponse): IConfIncomingMessageOffer | undefined {\r\n    if (!message.From) {\r\n        console.warn('translateOfferMessage(): Failed to translate \"Offer\" message. \"From\" member not found.')\r\n        return;\r\n    }\r\n    return {\r\n        type: 'Offer',\r\n        sessionDescription: data.Offer,\r\n        from: message.From,\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/Spreed/TranslateSpreedMessage.ts","import { SpreedICECandidate } from './SpreedMessage';\r\nimport {\r\n    createCandidateRequest,\r\n    createOfferRequest,\r\n    createAnswerRequest,\r\n    createHelloRequest,\r\n} from './SpreedAPI';\r\nimport {\r\n    IConfOutgoingMessage,\r\n    IConfOutgoingMessageCandidate,\r\n    IConfOutgoingMessageOffer,\r\n    IConfOutgoingMessageAnswer,\r\n    IConfMessageJoin,\r\n} from '../data/ConferenceMessage';\r\nimport {\r\n    SpreedRequest,\r\n    SpreedRequestCandidate,\r\n    SpreedRequestOffer,\r\n    SpreedRequestAnswer,\r\n    SpreedRequestHello,\r\n} from './SpreedRequest'\r\n\r\n// NOTE(andrews): TranslateConferenceMessage delegates the work of translating the message\r\n// to individual functions based on the message type. Not all message types need to be translated\r\n// into an IConfIncomingMessage. In such cases, this function will return undefined.\r\n// TODO(andrews): Figure out if we need to handle \"Bye\" message / or if it's necessary\r\nexport function TranslateConferenceMessage(message: IConfOutgoingMessage): SpreedRequest | undefined {\r\n    switch (message.type) {\r\n        case 'Join':\r\n            return translateJoinMessage(message);\r\n        case 'Answer':\r\n            return translateAnswerMessage(message);\r\n        case 'Offer':\r\n            return translateOfferMessage(message);\r\n        case 'Candidate':\r\n            return translateCandidateMessage(message);\r\n        default:\r\n            console.log('TranslateConferenceMessag(): Messge type not handled: %s.', message.type);\r\n            return;\r\n    }\r\n}\r\n\r\nfunction translateJoinMessage(message: IConfMessageJoin): SpreedRequestHello {\r\n     // TODO(andrews): Determine if we really need Version, UA properties.\r\n    return createHelloRequest({\r\n        Type: 'Conference',\r\n        Name: message.room,\r\n        Version: '',\r\n        Ua: '',\r\n    })\r\n}\r\n\r\nfunction translateAnswerMessage(message: IConfOutgoingMessageAnswer): SpreedRequestAnswer {\r\n    return createAnswerRequest({\r\n        Type: 'Answer',\r\n        Answer: message.sessionDescription,\r\n        To: message.to,\r\n    })\r\n}\r\n\r\nfunction translateOfferMessage(message: IConfOutgoingMessageOffer): SpreedRequestOffer {\r\n    return createOfferRequest({\r\n        Type: 'Offer',\r\n        Offer: message.sessionDescription,\r\n        To: message.to,\r\n    })\r\n}\r\n\r\nfunction translateCandidateMessage(message: IConfOutgoingMessageCandidate): SpreedRequestCandidate {\r\n    const Candidate: SpreedICECandidate = {\r\n        ...message.candidate,\r\n        type: 'candidate',\r\n    }\r\n    return createCandidateRequest({\r\n        Type: 'Candidate',\r\n        To: message.to,\r\n        Candidate,\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/Spreed/TranslateConferenceMessage.ts","// NOTE(andrews): This file is responsible for export the contract for talking to the Spreed\r\n// API.\r\nimport {\r\n    SpreedRequestOffer,\r\n    SpreedRequestAnswer,\r\n    SpreedRequestCandidate,\r\n    SpreedRequestHello,\r\n} from './SpreedRequest';\r\n\r\nimport {\r\n    SpreedMessageOffer,\r\n    SpreedMessageAnswer,\r\n    SpreedMessageCandidate,\r\n    SpreedMessageHello,\r\n} from './SpreedMessage';\r\n\r\nexport function createOfferRequest(Offer: SpreedMessageOffer): SpreedRequestOffer {\r\n    return {\r\n        Type: 'Offer',\r\n        Offer,\r\n    }\r\n}\r\n\r\nexport function createAnswerRequest(Answer: SpreedMessageAnswer): SpreedRequestAnswer {\r\n    return {\r\n        Type: 'Answer',\r\n        Answer,\r\n    }\r\n}\r\n\r\nexport function createCandidateRequest(Candidate: SpreedMessageCandidate): SpreedRequestCandidate {\r\n    return {\r\n        Type: 'Candidate',\r\n        Candidate,\r\n    }\r\n}\r\n\r\nexport function createHelloRequest(Hello: SpreedMessageHello): SpreedRequestHello {\r\n    return {\r\n        Type: 'Hello',\r\n        Hello,\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ../src/Spreed/SpreedAPI.ts","import './index.scss';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { App } from './components/App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('react-root')\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.scss\n// module id = 95\n// module chunks = 0"],"sourceRoot":""}